{"version":3,"sources":["Components/UtilFunctions/showEmptyFieldAndDeleteSnackbar.js","Components/commonStyles/AddNewItemStyles.js","Components/UtilFunctions/tableSortByHeading.js","assets/images/logo.png","assets/images/404.svg","assets/images/rocket.svg","assets/images/earth.svg","assets/images/moon.svg","assets/images/astronaut.svg","assets/images/LandingPage/code-4.jpeg","assets/images/LandingPage/code-1.jpeg","assets/images/LandingPage/code-2.jpeg","assets/images/LandingPage/code-3.jpeg","history.js","Components/commonStyles/ModuleItemListStyles.js","Components/commonStyles/toolbarStyles.js","Components/commonStyles/combineStyles.js","Components/commonStyles/AddNewItemThemes.js","Components/UtilFunctions/MySnackbarContent.js","Components/Employee/Snackbars/EmptyFieldSnackBar.js","Components/Employee/Snackbars/NewItemAddedConfirmSnackbar.js","Components/Employee/AddNewEmployee.js","Components/Employee/ShowEmployees.js","Components/Employee/Snackbars/EditItemConfirmSnackbar.js","Components/Employee/EditEmployees.js","Components/commonStyles/SearchFilter-Styles.js","Components/Employee/SearchFilterEmployees.js","Components/Employee/Snackbars/WrongDateRangeSnackBar.js","Components/Employee/Snackbars/NoRecordForDateRangeQuerySnackbar.js","Components/Employee/DateRangeFilterEmployees.js","Components/Employee/CurrentMonthEmployees.js","Components/Employee/TableToolbarEmployees.js","Components/Employee/TableHeadEmployees.js","Components/UtilFunctions/TablePaginationActionsWrapped.js","Components/Employee/EmployeeList.js","Components/Department/Snackbars/EmptyFieldSnackBar.js","Components/Department/Snackbars/NewItemAddedConfirmSnackbar.js","Components/Department/AddNewDepartment.js","Components/Department/Snackbars/EditItemConfirmSnackbar.js","Components/Department/EditDepartment.js","Components/Department/SearchFilterDepartment.js","Components/Department/TableToolbarDepartment.js","Components/Department/TableHeadDepartment.js","Components/Department/DepartmentList.js","Components/NotFound.js","Components/ComponentHeader.js","Components/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","showDeleteSnackbar","x","document","getElementById","className","setTimeout","replace","styles","theme","palette","primary","main","secondary","error","root","width","background","marginTop","spacing","unit","backgroundColor","paper","boxShadow","overflow","table","minWidth","tableWrapper","overflowX","gutters","mixins","styledHeader","& h1","color","fontSize","styledFooter","& h2","space","marginBottom","spaceDialogAction","marginRight","fab","margin","extendedIcon","lightTooltip","common","white","text","shadows","close","padding","formControl","maxWidth","selectEmpty","container","display","flexWrap","notchedOutline","border","overrides","MuiOutlinedInput","focused","& $notchedOutline","underline","&:after","borderBottomColor","borderWidth","desc","a","b","orderBy","stableSort","array","comparisonCB","stabilizedThis","map","el","index","sort","order","getSorting","__webpack_require__","p","createBrowserHistory","fabButton","position","zIndex","top","bottom","right","tableLayout","customTableCell","whiteSpace","textOverflow","row","&:nth-of-type(odd)","default","arrowGenerator","&[x-placement*=\"bottom\"] $arrow","left","height","&::before","borderColor","concat","&[x-placement*=\"top\"] $arrow","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","toolbarStyles","paddingRight","monthlyData","minHeight","paddingTop","verticalAlign","textAlign","borderRadius","cursor","todaysData","arrowPopper","black","arrow","content","borderStyle","bootstrapPopper","bootstrapTooltip","bootstrapPlacementLeft","bootstrapPlacementRight","bootstrapPlacementTop","bootstrapPlacementBottom","highlight","type","dark","spacer","flex","spacerCurrentMonth","actions","title","combineStyles","_len","arguments","length","Array","_key","arg","reduce","acc","val","Object","assign","createMuiTheme","typography","useNextVariants","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","withStyles","green","amber","icon","iconVariant","opacity","message","alignItems","props","classes","onClose","variant","other","objectWithoutProperties","Icon","react_default","createElement","SnackbarContent_default","classNames","aria-describedby","id","action","IconButton_default","key","aria-label","onClick","Close_default","EmptyFieldSnackBar","state","vertical","horizontal","_this$props","this","closeEmptyFieldSnackbar","openEmptyTextFieldSnackbar","Snackbar_default","anchorOrigin","open","autoHideDuration","ContentProps","UtilFunctions_MySnackbarContent","Component","NewItemAddedConfirmSnackbar","openNewItemAddedConfirmSnackbar","closeNewItemConfirmSnackbar","style","AddNewEmployee","department_objectId","employee_name","work_description","avg_employee_productivity","benchmark_employee_productivity","department_name","date","Date","handleCommencementDateChange","_this","setState","handleToggle","handleFabOpen","handleFormSubmit","addNewItemToParentState","_this$state","axios","post","then","history","push","catch","alert","handleCancel","handleEnterEscapeKeyPress","e","handleDepartmentNameChangeOnSelect","event","selectedDepartmentObject","allDepartmentsForSiblingCommunication","filter","item","name","target","value","_id","_this2","_this$state2","core_styles","material_ui_pickers_esm","utils","DateFnsUtils","Fab_default","aria-pressed","size","Add_default","largeIcon","Dialog_default","aria-labelledby","fullWidth","PaperProps","onKeyDown","DialogTitle_default","disableTypography","float","Cancel_default","DialogContent_default","required","FormControl_default","TextField_default","select","autoFocus","onChange","helperText","label","InputProps","material_ui_Menu","that","fontWeight","indexOf","fontWeightRegular","fontWeightMedium","multiline","keyboard","format","mask","disableOpenOnEnter","animateYearScrolling","DialogActions_default","Button_default","disabled","Snackbars_NewItemAddedConfirmSnackbar","Snackbars_EmptyFieldSnackBar","withTheme","ShowEmployee","handleEscapeKeyPress","itemToEdit","Visibility_default","defineProperty","EditItemConfirmSnackbar","MenuProps","maxHeight","ITEM_HEIGHT","EditEmployee","unSelectItems","handleEditFormSubmit","editItemToParentState","put","console","log","Edit_default","marginBotton","Snackbars_EditItemConfirmSnackbar","flexGrow","input","justifyContent","valueContainer","chip","chipFocused","emphasize","grey","noOptionsMessage","singleValue","placeholder","textSearchFilter","flexDirection","currentMonthData","paddingLeft","currentMonthDataEmployee","divider","labelRoot","inputComponent","_ref","inputRef","ref","components","Control","InputLabelProps","selectProps","shrink","disableUnderline","inputProps","objectSpread","innerRef","children","innerProps","textFieldProps","Menu","Paper_default","square","NoOptionsMessage","Typography_default","Option","MenuItem_default","buttonRef","selected","isFocused","component","isSelected","Placeholder","SingleValue","ValueContainer","SearchFilter","query","columnToQuery","arrowRef","handleArrowRef","node","suggestions","totalItemsFormatted","inputValue","onInputChange","selectStyles","base","& input","font","Grid_default","justify","alignContent","direction","xs","react_select_esm","options","inputId","multi","SelectField_default","floatingLabelText","handleColumnToQuery","primaryText","Tooltip_default","Fragment","placement","tooltip","popper","tooltipPlacementLeft","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","PopperProps","popperOptions","modifiers","enabled","Boolean","element","onOpen","setTextFilterTooltip","closeSearchFilterCompOnClick","React","combinedStyles","WrongDateRangeSnackBar","closeWrongDateRangeSnackBar","openWrongDateRangeSnackBar","NoRecordForDateRangeQuerySnackbar","openNoRecordForDateRangeQuery","closeNoRecordForDateRangeQuery","moment","require","DateRangeFilter","start_date","end_date","dateRangeQueryResult","totalDateRangeSearchResultChild","noRecordForDateRangeQuery","reason","handleStartDateChange","handleStartDateChangeParent","all","params","page","rowsperpage","rowsPerPage","spread","paginatedRange","nonPaginatedRange","data","ifUserWantsDateRangeData","handleEndDateChange","handleEndDateChangeParent","closeDateRangeQuery","closeDateRangeFilterCompOnClick","clearDateRangeTooltip","ifUserSearchedDateRange","setDateRangeTooltip","Snackbars_WrongDateRangeSnackBar","Snackbars_NoRecordForDateRangeQuerySnackbar","CurrentMonthEmployee","closeCurrentMonthData","closeCurrentMonthDataCompOnClick","momentMonthNumber","month","currentMonth","TableToolbarEmployee","shouldSearchFilterCompOpen","shouldDateRangeFilterCompOpen","shouldCurrentMonthDataCompOpen","shouldCurrentDateDataCompOpen","searchValue","searchSelection","dateRangeTooltip","textFilterCancelTooltip","tooltipfromchild","clearTextFilterTooltip","handleSearchInput","handleSearchSelection","_ref2","handleQueryString","openSearchFilterCompOnClick","clearAllQueryString","clearCurrentMonthSearch","closeCurrentDateDataCompOnClick","clearCurrentDateSearch","openDateRangeFilterCompOnClick","clearUserSearchedDateRange","numSelected","confirmDeleteCustom","checkedItems","editItem","Toolbar_default","getCurrentMonthData","react_csv","downloadSelectedItems","react_fontawesome_index_es","button","ShowEmployees","bind","Delete_default","rightIcon","EditEmployees","CurrentMonthEmployees","DateRangeFilterEmployees","SearchFilterEmployees","rows","tableHeaderProp","disablePadding","TableHeadEmployee","createSortHandler","property","onRequestSort","onSelectAllClick","count","noOfItemsInCurrentPage","TableHead_default","TableRow_default","enterDelay","TableCell_default","Checkbox_default","indeterminate","Math","max","ceil","checked","align","sortDirection","TableSortLabel_default","active","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","TablePaginationActionsWrapped","flexShrink","tableSortByHeadingUtilFunc","CustomTableCell","head","body","TableCell","EmployeeList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addItem","toConsumableArray","currentDateTotal","currentMonthTotal","returnDocumentToEdit","res","itemsDateRangePaginated","ifUserClickedForCurrentMonth","currentMonthPaginated","currentDatePaginated","totalDateRangeSearchResultParent","idArr","payload","employee_id_list_arr","confirmAlert","customUI","delete","response","status","handleRequestSort","handleSelectAllClick","queryStringFromChild","n","lowerCaseQuery","toLowerCase","itemsToRenderInThisPage","includes","slice","handleClick","selectedIndex","newSelected","handleChangeRowsPerPage","queryTypedInChild","columnToQueryInChild","startdate","enddate","getTotalCurrentMonthData","getCurrentMonthPaginated","handleChangePage","_this$state3","dateRangeArrToRenderInCurrentPage","fullDateRangeSearchResult","totalItemsUnformatted","get","getTotalCurrentDateData","getCurrentDatePaginated","prevProps","prevState","_this3","_this$state4","_this4","_this$state5","totalTextQueryResult","orderByLodash","emptyRows","min","MuiThemeProvider_default","Helmet","charSet","class","Row","Col","TableToolbarEmployees","Table_default","TableHeadEmployees","parseInt","TableBody_default","hover","role","aria-checked","tabIndex","colSpan","TableFooter_default","TablePagination_default","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","Employee_AddNewEmployee","AddNewDepartment","code","Department_Snackbars_NewItemAddedConfirmSnackbar","Department_Snackbars_EmptyFieldSnackBar","openEditItemConfirmSnackbar","EditDepartment","departmentToEdit","Department_Snackbars_EditItemConfirmSnackbar","allDepartments","TableToolbarDepartment","Department_EditDepartment","SearchFilterDepartment","TableHeadDepartment","DepartmentList","openEditComponent","openEditModal","setDepartmentForSiblingCommunication","department_id_list_arr","listOfItemsInCurrentPage","departmentListToRender","editingOnItemDone","currentPageRenderedList","Department_TableToolbarDepartment","deleteItem","Department_TableHeadDepartment","i","DepartmentList_CustomTableCell","Department_AddNewDepartment","NotFound","src","Link","to","ListItemLink","ListItem_default","EmployeeIcon","SvgIcon_default","d","DepartmentIcon","ComponentHeader","handleDrawerOpen","onSideDrawerOpen","handleDrawerClose","onSideDrawerClose","_classNames3","_classNames4","CssBaseline_default","AppBar_default","appBar","appBarShift","disableGutters","menuButton","hide","icons_Menu_default","noWrap","Drawer_default","drawer","drawerOpen","drawerClose","toolbar","ChevronRight_default","ChevronLeft_default","List_default","ComponentHeader_ListItemLink","href","ComponentHeader_EmployeeIcon","paddingBottom","ListItemText_default","ComponentHeader_DepartmentIcon","Divider_default","ListItemIcon_default","MoveToInbox_default","Mail_default","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","breakpoints","up","LandingPage","render","Welcome_default","loopDuration","textColor","imageAnimation","image","textAnimation","library","add","faFilter","faDownload","faCalendarAlt","App","isSideDrawerOpen","department","contentStyle","BrowserRouter","basename","Router","Components_ComponentHeader","Switch","Route","exact","path","Components_LandingPage","Employee_EmployeeList","Department_DepartmentList","window","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8347db97.chunk.js","sourcesContent":["// This snackbar will be rendered when I submit an empty description field in each of the individual modules like \"Development Works\", \"Income & Port Dues\" etc\n// Also this same showEmptyFieldSnackbar will render the snackbar after successfully deleting a document, port-notice, GO, Tariff or Tidal data\n\nmodule.exports = {\n  showDeleteSnackbar: () => {\n    var x = document.getElementById(\"snackbar\");\n    x.className = \"show\";\n    setTimeout(() => {\n      x.className = x.className.replace(\"show\", \"\");\n    }, 2000);\n  }\n};\n","module.exports = {\n  styles: theme => ({\n    palette: {\n      primary: { main: '#9E9E9E' },\n      secondary: { main: '#ee0053' },\n      error: { main: '#ee0053' }\n    },\n    root: {\n      width: '100%',\n      background: 'linear-gradient(45deg, #E91E63 30%, #FF8E53 90%)',\n      marginTop: theme.spacing.unit * 10,\n      backgroundColor: '#E0E0E0'\n    },\n    paper: {\n      backgroundColor: '#F5F5F5',\n      boxShadow: 'none',\n      overflow: 'hidden'\n    },\n    table: {\n      minWidth: 1020\n    },\n    tableWrapper: {\n      overflowX: 'auto'\n    },\n    gutters: theme.mixins.gutters(),\n    styledHeader: {\n      background: '#66CCFF',\n      '& h1': {\n        color: '#f9f9f6'\n      },\n      color: '#f9f9f6',\n      fontSize: 25\n    },\n    styledFooter: {\n      background: '#FAFAFA',\n      '& h2': {\n        color: '#FAFAFA'\n      }\n    },\n    space: {\n      marginTop: theme.spacing.unit * 4,\n      marginBottom: theme.spacing.unit * 4\n    },\n    spaceDialogAction: {\n      marginTop: theme.spacing.unit * 2,\n      marginBottom: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    fab: {\n      margin: theme.spacing.unit * 4\n    },\n    extendedIcon: {\n      marginRight: theme.spacing.unit\n    },\n    margin: {\n      margin: theme.spacing.unit * 4\n    },\n\n    lightTooltip: {\n      background: theme.palette.common.white,\n      color: theme.palette.text.primary,\n      boxShadow: theme.shadows[1],\n      fontSize: 16\n    },\n    close: {\n      padding: theme.spacing.unit * 2,\n      fontSize: 25\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      maxWidth: 300\n    },\n    selectEmpty: {\n      marginTop: theme.spacing.unit * 2\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    notchedOutline: {\n      border: '1px solid red'\n    },\n    overrides: {\n      MuiOutlinedInput: {\n        focused: {\n          border: '1px solid #4A90E2'\n        },\n        '& $notchedOutline': {\n          border: '1px solid #4A90E2'\n        }\n      }\n    },\n    underline: {\n      '&:after': {\n        borderBottomColor: 'rgb(70, 197, 29)',\n        borderWidth: '1px'\n      }\n    }\n  })\n};\n\n/*\n1> In above, the 'space' will control the vertical line spacing between TestFields and DatePicker inside the Dialog (i.e. inside AddNewDevelopmentWork component)\n\nAnd 'spaceDialogAction' will control the vertical space\n */\n","module.exports = {\n  desc: (a, b, orderBy) => {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  },\n\n  /* stableSort() higher order function to sort by a table heading\n      1> the argument 'comparisonCB' is the getSorting() defined below.\n      2> The sort() method takes a single compareFunction as a callback and compares each pair of successive elements.\n       */\n  stableSort: (array, comparisonCB) => {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparisonCB(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n  },\n\n  /* getSorting() to be passed as a callback to the above stableSort(). The argument 'orderBy' will initially start (as a state) its value with 'imported_date' (which is a table header label) and then will take on whichever table header label the user clicks on.\n      A> First the 'orderBy' value will be set by handleRequestSort() with its argument 'property'\n      B> Then this function will be passed down as a prop 'onRequestSort' to EnhancedTableHead child component.\n      C> In EnhancedTableHead, it will be called within createSortHandler() function and will be invoked on onClick and passed row.tableHeaderProp (which is the Table-header field value)\n       */\n  getSorting: (order, orderBy) => {\n    return order === \"desc\"\n      ? (a, b) => module.exports.desc(a, b, orderBy)\n      : (a, b) => -module.exports.desc(a, b, orderBy);\n  }\n};\n\n/* Special Note - Inside the getSorting() function I am calling a “local” function (desc()) within module.exports from another function (getSorting()) in module.exports with < module.exports >\n\n*/\n","module.exports = __webpack_public_path__ + \"static/media/logo.17954124.png\";","module.exports = __webpack_public_path__ + \"static/media/404.5b71688c.svg\";","module.exports = __webpack_public_path__ + \"static/media/rocket.be464a54.svg\";","module.exports = __webpack_public_path__ + \"static/media/earth.dbfa284b.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.551a0cd5.svg\";","module.exports = __webpack_public_path__ + \"static/media/astronaut.dcc3e306.svg\";","module.exports = __webpack_public_path__ + \"static/media/code-4.f56940a7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/code-1.0ceaeb8c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/code-2.90222e72.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/code-3.38ff324a.jpeg\";","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","export const styles = theme => ({\n  palette: {\n    primary: { main: \"#2196f3\" },\n    secondary: { main: \"#fdff00\" },\n    error: { main: \"#ee0053\" }\n  },\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflow: \"auto\"\n  },\n  space: {\n    marginTop: theme.spacing.unit * 2\n  },\n  fab: {\n    margin: theme.spacing.unit\n  },\n  fabButton: {\n    position: \"fixed\",\n    zIndex: 1,\n    top: \"auto\",\n    bottom: 0,\n    marginBottom: 10,\n    right: 10,\n    margin: \"0 auto\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit\n  },\n  lightTooltip: {\n    background: theme.palette.common.white,\n    color: theme.palette.text.primary,\n    boxShadow: theme.shadows[1],\n    fontSize: 16\n  },\n  table: {\n    minWidth: 500,\n    tableLayout: \"auto\",\n    overflowX: \"fixed\"\n  },\n  tableWrapper: {\n    overflow: \"auto\"\n  },\n  customTableCell: {\n    whiteSpace: \"nowrap\",\n    maxWidth: 0,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n});\n\n/*\nTo clip text with an ellipsis when it overflows a table cell, you will need to set the max-width CSS property on each td class for the overflow to work.\n\nFor responsive layouts; use the max-width CSS property to specify the effective minimum width of the column, or just use max-width: 0; for unlimited flexibility.\n*/\n","function arrowGenerator(color) {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: \"-0.95em\",\n      width: \"3em\",\n      height: \"1em\",\n      \"&::before\": {\n        borderWidth: \"0 1em 1em 1em\",\n        borderColor: `transparent transparent ${color} transparent`\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: \"-0.95em\",\n      width: \"3em\",\n      height: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 1em 0 1em\",\n        borderColor: `${color} transparent transparent transparent`\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: \"-0.95em\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 1em 1em 0\",\n        borderColor: `transparent ${color} transparent transparent`\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: \"-0.95em\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 0 1em 1em\",\n        borderColor: `transparent transparent transparent ${color}`\n      }\n    }\n  };\n}\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing.unit\n  },\n  monthlyData: {\n    marginRight: \"12px\",\n    width: \"650px\",\n    minHeight: \"40px\",\n    paddingTop: \"10px\",\n    verticalAlign: \"center\",\n    textAlign: \"center\",\n    borderRadius: \"10px\",\n    cursor: \"pointer\"\n  },\n  todaysData: {\n    marginRight: \"12px\",\n    width: \"200px\",\n    paddingTop: \"6px\",\n    verticalAlign: \"center\",\n    textAlign: \"center\",\n    borderRadius: \"10px\",\n    cursor: \"pointer\"\n  },\n  arrowPopper: arrowGenerator(theme.palette.common.black),\n  arrow: {\n    position: \"absolute\",\n    fontSize: 6,\n    width: \"3em\",\n    height: \"3em\",\n    \"&::before\": {\n      content: '\"\"',\n      margin: \"auto\",\n      display: \"block\",\n      width: 0,\n      height: 0,\n      borderStyle: \"solid\"\n    }\n  },\n  bootstrapPopper: arrowGenerator(theme.palette.common.black),\n  bootstrapTooltip: {\n    backgroundColor: theme.palette.common.black,\n    paddingTop: \"12px\"\n  },\n  bootstrapPlacementLeft: {\n    margin: \"0 8px\"\n  },\n  bootstrapPlacementRight: {\n    margin: \"0 8px\"\n  },\n  bootstrapPlacementTop: {\n    margin: \"8px 0\"\n  },\n  bootstrapPlacementBottom: {\n    margin: \"8px 0\"\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: \"#66CCFF\"\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n\n  spacer: {\n    flex: \"1 2 100%\"\n  },\n  spacerCurrentMonth: {\n    flex: \"1 2 100%\"\n  },\n\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: \"0 0 auto\"\n  }\n});\n\nexport default toolbarStyles;\n\n/*\n1> Explanation of < flex: 1 1 100% > - With this I am making 'spacer' to stay full-width of the available space. And then adding two 'spacer' class to both side of the '{currentMonth} month's Exports' to make the currentMonth get centered within the available space\n\nA) The 100% in the above is the 'flex-basis', a sub-property of the Flexible Box Layout module. It specifies the initial size of the flexible item, before any available space is distributed according to the flex factors.\n\nB) flex - This is the shorthand for flex-grow, flex-shrink and flex-basis combined. Defaults is 0 1 auto.\n\nB) In other words, the general syntax -\nflex : flex-grow | flex-shrink | flex-basis\n(https://developer.mozilla.org/en-US/docs/Web/CSS/flex)\n\nC) The general way flex work - I need to add display:flex to the parent tag and then flex:1 to the child to enable the child to expand to 100% of parent.\n\n*/\n","// Utility function to combine multiple Material-UI styles\n\nconst combineStyles = (...styles) => {\n  return function CombineStyles(theme) {\n    const outStyles = styles.map(arg => {\n      // Apply the \"theme\" object for style functions.\n      if (typeof arg === \"function\") {\n        return arg(theme);\n      }\n      // Objects need no change.\n      return arg;\n    });\n    return outStyles.reduce((acc, val) => Object.assign(acc, val));\n  };\n};\n\nexport default combineStyles;\n","import { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    primary: { main: \"#2196f3\" },\n    secondary: { main: \"#fdff00\" },\n    error: { main: \"#f44336\" }\n  }\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport green from \"@material-ui/core/colors/green\";\nimport amber from \"@material-ui/core/colors/amber\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst styles1 = theme => ({\n  close: {\n    padding: theme.spacing.unit * 2\n  },\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\n};\n\nexport default withStyles(styles1)(MySnackbarContent);\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MySnackbarContent from \"../../UtilFunctions/MySnackbarContent\";\nimport { withStyles } from \"@material-ui/core\";\nimport { styles } from \"../../commonStyles/AddNewItemStyles\";\nimport PropTypes from \"prop-types\";\n\nclass EmptyFieldSnackBar extends Component {\n  state = {\n    vertical: \"top\",\n    horizontal: \"center\"\n  };\n\n  render() {\n    const {\n      classes,\n      closeEmptyFieldSnackbar,\n      openEmptyTextFieldSnackbar\n    } = this.props;\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        open={openEmptyTextFieldSnackbar}\n        autoHideDuration={4000}\n        onClose={closeEmptyFieldSnackbar}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n      >\n        <MySnackbarContent\n          onClose={closeEmptyFieldSnackbar}\n          variant=\"warning\"\n          className={classes.margin}\n          message=\"Please Fill all the required fields !\"\n        />\n      </Snackbar>\n    );\n  }\n}\n\nEmptyFieldSnackBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EmptyFieldSnackBar);\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MySnackbarContent from \"../../UtilFunctions/MySnackbarContent\";\nimport { withStyles } from \"@material-ui/core\";\nimport { styles } from \"../../commonStyles/AddNewItemStyles\";\nimport PropTypes from \"prop-types\";\n\nclass NewItemAddedConfirmSnackbar extends Component {\n  state = {\n    vertical: \"top\",\n    horizontal: \"center\"\n  };\n\n  render() {\n    const {\n      classes,\n      openNewItemAddedConfirmSnackbar,\n      closeNewItemConfirmSnackbar\n    } = this.props;\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        open={openNewItemAddedConfirmSnackbar}\n        autoHideDuration={3000}\n        onClose={closeNewItemConfirmSnackbar}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        style={{ marginTop: \"35px\" }}\n      >\n        <MySnackbarContent\n          onClose={closeNewItemConfirmSnackbar}\n          variant=\"success\"\n          className={classes.margin}\n          message=\"New Employees has been saved successfully\"\n        />\n      </Snackbar>\n    );\n  }\n}\n\nNewItemAddedConfirmSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NewItemAddedConfirmSnackbar);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport history from \"../../history\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { withStyles } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"material-ui-pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { styles } from \"../commonStyles/AddNewItemStyles\";\nimport theme from \"../commonStyles/AddNewItemThemes\";\nimport EmptyFieldSnackBar from \"./Snackbars/EmptyFieldSnackBar\";\nimport NewItemAddedConfirmSnackbar from \"./Snackbars/NewItemAddedConfirmSnackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { MenuItem } from \"material-ui/Menu\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n\nfunction getStyles(name, that) {\n  return {\n    fontWeight:\n      that.state.department_name.indexOf(name) === -1\n        ? that.props.theme.typography.fontWeightRegular\n        : that.props.theme.typography.fontWeightMedium,\n    width: \"100%\"\n  };\n}\n\nclass AddNewEmployee extends Component {\n  state = {\n    open: false,\n    openNewItemAddedConfirmSnackbar: false,\n    openEmptyTextFieldSnackbar: false,\n    vertical: \"top\",\n    horizontal: \"center\",\n    department_objectId: \"\",\n    employee_name: \"\",\n    work_description: \"\",\n    avg_employee_productivity: \"\",\n    benchmark_employee_productivity: \"\",\n    department_name: \"\",\n    date: new Date()\n  };\n\n  handleCommencementDateChange = date => {\n    this.setState({\n      date: date\n    });\n  };\n\n  handleToggle = () => {\n    this.setState({\n      open: !this.state.open\n    });\n  };\n\n  handleFabOpen = () => {\n    this.setState({ open: true });\n  };\n\n  closeNewItemConfirmSnackbar = () => {\n    this.setState({ openNewItemAddedConfirmSnackbar: false });\n  };\n\n  closeEmptyFieldSnackbar = () => {\n    this.setState({ openEmptyTextFieldSnackbar: false });\n  };\n\n  handleFormSubmit = () => {\n    const { addNewItemToParentState } = this.props;\n    const {\n      department_objectId,\n      employee_name,\n      work_description,\n      avg_employee_productivity,\n      benchmark_employee_productivity,\n      date\n    } = this.state;\n    if (\n      department_objectId !== \"\" &&\n      employee_name !== \"\" &&\n      work_description !== \"\" &&\n      avg_employee_productivity !== \"\" &&\n      benchmark_employee_productivity !== \"\" &&\n      date !== \"\"\n    ) {\n      axios\n        .post(\"/api/employee/\", {\n          department_objectId,\n          employee_name,\n          work_description,\n          avg_employee_productivity,\n          benchmark_employee_productivity,\n          date\n        })\n        .then(() => {\n          addNewItemToParentState({\n            department_objectId,\n            employee_name,\n            work_description,\n            avg_employee_productivity,\n            benchmark_employee_productivity,\n            date\n          });\n          this.setState({\n            open: false,\n            openNewItemAddedConfirmSnackbar: true,\n            vertical: \"top\",\n            horizontal: \"center\"\n          });\n          history.push(\"/employee\");\n        })\n        .catch(error => {\n          alert(\"Ooops something wrong happened, please try again\");\n        });\n    } else {\n      this.setState({ openEmptyTextFieldSnackbar: true });\n    }\n  };\n\n  handleCancel = () => {\n    this.setState({ open: false });\n  };\n\n  handleEnterEscapeKeyPress = e => {\n    if (e.key === \"Enter\") {\n      this.handleFormSubmit();\n    } else if (e.key === \"Escape\") {\n      this.handleCancel();\n    }\n  };\n\n  handleDepartmentNameChangeOnSelect = event => {\n    const selectedDepartmentObject = this.props.allDepartmentsForSiblingCommunication.filter(\n      item => item.name === event.target.value\n    );\n    this.setState({\n      department_name: event.target.value,\n      department_objectId: selectedDepartmentObject[0]._id\n    });\n  };\n\n  render() {\n    const { classes, allDepartmentsForSiblingCommunication } = this.props;\n    const {\n      department_objectId,\n      employee_name,\n      work_description,\n      avg_employee_productivity,\n      benchmark_employee_productivity,\n      department_name,\n      date\n    } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <div>\n            <Fab\n              onClick={this.handleFabOpen}\n              aria-pressed=\"true\"\n              color=\"secondary\"\n              size=\"large\"\n              aria-label=\"Add\"\n              fontSize=\"large\"\n            >\n              <AddIcon className={styles.largeIcon} />\n            </Fab>\n\n            <Dialog\n              open={this.state.open}\n              onClose={this.handleToggle}\n              aria-labelledby=\"form-dialog-title\"\n              fullWidth={true}\n              maxWidth={\"sm\"}\n              variant=\"contained\"\n              PaperProps={{\n                classes: {\n                  root: classes.paper\n                }\n              }}\n              onKeyDown={this.handleEnterEscapeKeyPress}\n            >\n              <DialogTitle\n                id=\"form-dialog-title\"\n                className={this.props.classes.styledHeader}\n                disableTypography\n                style={{ height: \"60px\", paddingTop: \"10px\" }}\n              >\n                New Employees\n                <IconButton\n                  onClick={this.handleToggle}\n                  style={{\n                    float: \"right\"\n                  }}\n                >\n                  <CancelIcon />\n                </IconButton>\n              </DialogTitle>\n              <DialogContent required>\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    select\n                    id=\"standard-number\"\n                    required\n                    autoFocus\n                    value={department_name}\n                    onChange={this.handleDepartmentNameChangeOnSelect}\n                    error={department_name === \"\"}\n                    helperText={\n                      this.state.department_name === \"\"\n                        ? \"Please enter the Department Name\"\n                        : \" \"\n                    }\n                    style={{ width: \"540px\", marginTop: \"30px\" }}\n                    label=\"Department Name\"\n                    InputProps={{\n                      classes: {\n                        underline: classes.underline\n                      }\n                    }}\n                  >\n                    {allDepartmentsForSiblingCommunication.map(item => (\n                      <MenuItem\n                        key={item.name}\n                        value={item.name}\n                        style={getStyles(item.name, this)}\n                      >\n                        {item.name}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </FormControl>\n                <TextField\n                  required\n                  autoFocus\n                  classes={{\n                    root: classes.space\n                  }}\n                  value={employee_name}\n                  onChange={e =>\n                    this.setState({\n                      employee_name: e.target.value\n                    })\n                  }\n                  error={employee_name === \"\"}\n                  helperText={\n                    employee_name === \"\" ? \"Please enter Employee Name\" : \" \"\n                  }\n                  label=\"Employee Name\"\n                  type=\"string\"\n                  fullWidth\n                  InputProps={{\n                    classes: {\n                      underline: classes.underline\n                    }\n                  }}\n                />\n                <TextField\n                  required\n                  autoFocus\n                  multiline\n                  classes={{\n                    root: classes.space\n                  }}\n                  value={work_description}\n                  onChange={e =>\n                    this.setState({\n                      work_description: e.target.value\n                    })\n                  }\n                  error={work_description === \"\"}\n                  helperText={\n                    work_description === \"\"\n                      ? \"Please enter Work Description\"\n                      : \" \"\n                  }\n                  label=\"Description of Work\"\n                  type=\"string\"\n                  fullWidth\n                  InputProps={{\n                    classes: {\n                      underline: classes.underline\n                    }\n                  }}\n                />\n\n                <TextField\n                  id=\"standard-number\"\n                  required\n                  autoFocus\n                  classes={{\n                    root: classes.space\n                  }}\n                  value={avg_employee_productivity}\n                  onChange={e =>\n                    this.setState({\n                      avg_employee_productivity: e.target.value\n                    })\n                  }\n                  error={\n                    avg_employee_productivity === \"\" ||\n                    avg_employee_productivity < 0\n                  }\n                  helperText={\n                    avg_employee_productivity === \"\"\n                      ? \"Please enter Avg. Employees Productivity (Lines of Codes per Hour)\"\n                      : \" \"\n                  }\n                  label=\"Avg. Employees Productivity (Lines of Codes per Hour)\"\n                  type=\"number\"\n                  fullWidth\n                  InputProps={{\n                    classes: {\n                      underline: classes.underline\n                    }\n                  }}\n                />\n                <TextField\n                  id=\"standard-number\"\n                  required\n                  autoFocus\n                  classes={{\n                    root: classes.space\n                  }}\n                  value={benchmark_employee_productivity}\n                  onChange={e =>\n                    this.setState({\n                      benchmark_employee_productivity: e.target.value\n                    })\n                  }\n                  error={\n                    benchmark_employee_productivity === \"\" ||\n                    benchmark_employee_productivity < 0\n                  }\n                  helperText={\n                    benchmark_employee_productivity === \"\"\n                      ? \"Please enter Standard Employees Productivity (Lines of Codes per Hour)\"\n                      : \" \"\n                  }\n                  label=\"Standard Employees Productivity (Lines of Codes per Hour)\"\n                  type=\"number\"\n                  fullWidth\n                  InputProps={{\n                    classes: {\n                      underline: classes.underline\n                    }\n                  }}\n                />\n\n                <div\n                  style={{\n                    display: \"flex\"\n                  }}\n                >\n                  <div style={{ display: \"flex\", margin: \"auto\" }}>\n                    <DatePicker\n                      keyboard\n                      classes={{\n                        root: classes.space\n                      }}\n                      format=\"dd/MM/yyyy\"\n                      mask={value =>\n                        value\n                          ? [\n                              /\\d/,\n                              /\\d/,\n                              \"/\",\n                              /\\d/,\n                              /\\d/,\n                              \"/\",\n                              /\\d/,\n                              /\\d/,\n                              /\\d/,\n                              /\\d/\n                            ]\n                          : []\n                      }\n                      label=\"Date of Employment\"\n                      value={date}\n                      onChange={this.handleCommencementDateChange}\n                      disableOpenOnEnter\n                      animateYearScrolling={false}\n                      style={{ paddingRight: \"5px\" }}\n                    />\n                  </div>\n                </div>\n              </DialogContent>\n              <DialogActions\n                className={this.props.classes.styledFooter}\n                style={{\n                  margin: \"0px\"\n                }}\n              >\n                <Button\n                  onClick={this.handleCancel}\n                  classes={{\n                    root: classes.spaceDialogAction\n                  }}\n                  variant=\"contained\"\n                  size=\"large\"\n                  style={{\n                    backgroundColor: \"#ee0053\"\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={this.handleFormSubmit}\n                  classes={{\n                    root: classes.spaceDialogAction\n                  }}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  size=\"large\"\n                  type=\"submit\"\n                  disabled={\n                    department_objectId === \"\" ||\n                    employee_name === \"\" ||\n                    work_description === \"\" ||\n                    avg_employee_productivity === \"\" ||\n                    benchmark_employee_productivity === \"\" ||\n                    department_name === \"\" ||\n                    date === \"\"\n                  }\n                >\n                  Save\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <NewItemAddedConfirmSnackbar\n              openNewItemAddedConfirmSnackbar={\n                this.state.openNewItemAddedConfirmSnackbar\n              }\n              closeNewItemConfirmSnackbar={this.closeNewItemConfirmSnackbar}\n            />\n\n            <EmptyFieldSnackBar\n              openEmptyTextFieldSnackbar={this.state.openEmptyTextFieldSnackbar}\n              closeEmptyFieldSnackbar={this.closeEmptyFieldSnackbar}\n            />\n          </div>\n        </MuiPickersUtilsProvider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nAddNewEmployee.propTypes = {\n  classes: PropTypes.object.isRequired,\n  allDepartmentsForSiblingCommunication: PropTypes.array.isRequired,\n  addNewItemToParentState: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(AddNewEmployee);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"material-ui-pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { styles } from \"../commonStyles/AddNewItemStyles\";\nimport theme from \"../commonStyles/AddNewItemThemes\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n\nclass ShowEmployee extends Component {\n  state = {\n    open: false\n  };\n\n  handleToggle = () => {\n    this.setState({\n      open: !this.state.open\n    });\n  };\n\n  handleFabOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ open: false });\n  };\n\n  handleEscapeKeyPress = e => {\n    if (e.key === \"Escape\") {\n      this.handleCancel();\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    const employee_name =\n      this.props.itemToEdit[0] && this.props.itemToEdit[0].employee_name;\n    const work_description =\n      this.props.itemToEdit[0] && this.props.itemToEdit[0].work_description;\n\n    const avg_employee_productivity =\n      this.props.itemToEdit[0] &&\n      this.props.itemToEdit[0].avg_employee_productivity;\n    const benchmark_employee_productivity =\n      this.props.itemToEdit[0] &&\n      this.props.itemToEdit[0].benchmark_employee_productivity;\n    const department_name =\n      this.props.itemToEdit[0] && this.props.itemToEdit[0].department_name;\n    const date = this.props.itemToEdit[0] && this.props.itemToEdit[0].date;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <div>\n            <IconButton onClick={this.handleFabOpen} aria-label=\"Edit\">\n              <VisibilityIcon />\n            </IconButton>\n            <Dialog\n              open={this.state.open}\n              onClose={this.handleToggle}\n              aria-labelledby=\"form-dialog-title\"\n              fullWidth={true}\n              maxWidth={\"sm\"}\n              variant=\"contained\"\n            >\n              <DialogTitle\n                id=\"form-dialog-title\"\n                className={this.props.classes.styledHeader}\n              >\n                Details of this Employees\n                <IconButton\n                  onClick={this.handleToggle}\n                  style={{ float: \"right\" }}\n                >\n                  <CancelIcon />\n                </IconButton>\n              </DialogTitle>\n              <DialogContent required>\n                <TextField\n                  autoFocus\n                  classes={{\n                    root: classes.space\n                  }}\n                  value={department_name}\n                  style={{ width: \"540px\", marginTop: \"30px\" }}\n                  label=\"Department Name\"\n                  InputProps={{\n                    classes: {\n                      underline: classes.underline\n                    }\n                  }}\n                  type=\"string\"\n                  fullWidth\n                  InputProps={{\n                    classes: {\n                      underline: classes.underline\n                    }\n                  }}\n                />\n                <TextField\n                  autoFocus\n                  classes={{\n                    root: classes.space\n                  }}\n                  value={employee_name}\n                  label=\"Employee Name\"\n                  type=\"string\"\n                  fullWidth\n                  InputProps={{\n                    classes: {\n                      underline: classes.underline\n                    }\n                  }}\n                />\n                <TextField\n                  autoFocus\n                  multiline\n                  classes={{\n                    root: classes.space\n                  }}\n                  value={work_description}\n                  label=\"Description of Work\"\n                  type=\"string\"\n                  fullWidth\n                  InputProps={{\n                    classes: {\n                      underline: classes.underline\n                    }\n                  }}\n                />\n                <TextField\n                  autoFocus\n                  multiline\n                  classes={{\n                    root: classes.space\n                  }}\n                  value={avg_employee_productivity}\n                  label=\"Avg. Employee Productivity\"\n                  type=\"number\"\n                  fullWidth\n                  InputProps={{\n                    classes: {\n                      underline: classes.underline\n                    }\n                  }}\n                />\n                <TextField\n                  id=\"standard-number\"\n                  required\n                  autoFocus\n                  classes={{\n                    root: classes.space\n                  }}\n                  value={benchmark_employee_productivity}\n                  label=\"Standard Employee Productivity\"\n                  type=\"number\"\n                  fullWidth\n                  InputProps={{\n                    classes: {\n                      underline: classes.underline\n                    }\n                  }}\n                />\n                <div\n                  style={{\n                    display: \"flex\"\n                  }}\n                >\n                  <div style={{ display: \"flex\", margin: \"auto\" }}>\n                    <DatePicker\n                      keyboard\n                      classes={{\n                        root: classes.space\n                      }}\n                      format=\"dd/MM/yyyy\"\n                      mask={value =>\n                        value\n                          ? [\n                              /\\d/,\n                              /\\d/,\n                              \"/\",\n                              /\\d/,\n                              /\\d/,\n                              \"/\",\n                              /\\d/,\n                              /\\d/,\n                              /\\d/,\n                              /\\d/\n                            ]\n                          : []\n                      }\n                      label=\"Date of Employment\"\n                      value={date}\n                      disableOpenOnEnter\n                      animateYearScrolling={false}\n                      style={{ paddingRight: \"5px\" }}\n                    />\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </div>\n        </MuiPickersUtilsProvider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nShowEmployee.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ShowEmployee);\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MySnackbarContent from \"../../UtilFunctions/MySnackbarContent\";\nimport { withStyles } from \"@material-ui/core\";\nimport { styles } from \"../../commonStyles/AddNewItemStyles\";\nimport PropTypes from \"prop-types\";\n\nclass EditItemConfirmSnackbar extends Component {\n  state = {\n    vertical: \"top\",\n    horizontal: \"center\"\n  };\n\n  render() {\n    const {\n      classes,\n      openNewItemAddedConfirmSnackbar,\n      closeNewItemConfirmSnackbar\n    } = this.props;\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        open={openNewItemAddedConfirmSnackbar}\n        autoHideDuration={2000}\n        onClose={closeNewItemConfirmSnackbar}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n      >\n        <MySnackbarContent\n          onClose={closeNewItemConfirmSnackbar}\n          variant=\"success\"\n          className={classes.margin}\n          message=\"The Employees record has been updated successfully\"\n        />\n      </Snackbar>\n    );\n  }\n}\n\nEditItemConfirmSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EditItemConfirmSnackbar);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport history from \"../../history\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"material-ui-pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { styles } from \"../commonStyles/AddNewItemStyles\";\nimport theme from \"../commonStyles/AddNewItemThemes\";\nimport EmptyFieldSnackBar from \"./Snackbars/EmptyFieldSnackBar\";\nimport EditItemConfirmSnackbar from \"./Snackbars/EditItemConfirmSnackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { MenuItem } from \"material-ui/Menu\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 550\n    }\n  }\n};\n\nfunction getStyles(name, that) {\n  return {\n    fontWeight:\n      that.state.department_name.indexOf(name) === -1\n        ? that.props.theme.typography.fontWeightRegular\n        : that.props.theme.typography.fontWeightMedium,\n    width: \"100%\"\n  };\n}\n\nclass EditEmployee extends Component {\n  state = {\n    open: false,\n    openNewItemAddedConfirmSnackbar: false,\n    openEmptyTextFieldSnackbar: false,\n    vertical: \"top\",\n    horizontal: \"center\",\n    department_objectId: this.props.itemToEdit[0].department_objectId,\n    employee_name: this.props.itemToEdit[0].employee_name,\n    work_description: this.props.itemToEdit[0].work_description,\n    avg_employee_productivity: this.props.itemToEdit[0]\n      .avg_employee_productivity,\n    benchmark_employee_productivity: this.props.itemToEdit[0]\n      .benchmark_employee_productivity,\n    department_name: this.props.itemToEdit[0].department_name,\n    date: this.props.itemToEdit[0].date\n  };\n\n  handleCommencementDateChange = date => {\n    this.setState({\n      date: date\n    });\n  };\n\n  handleToggle = () => {\n    this.setState({\n      open: !this.state.open\n    });\n  };\n\n  handleFabOpen = () => {\n    this.setState({ open: true });\n  };\n\n  closeNewItemConfirmSnackbar = () => {\n    this.setState({ openNewItemAddedConfirmSnackbar: false });\n    this.props.unSelectItems();\n  };\n\n  closeEmptyFieldSnackbar = () => {\n    this.setState({ openEmptyTextFieldSnackbar: false }, () => {});\n  };\n\n  handleEditFormSubmit = () => {\n    const { editItemToParentState } = this.props;\n\n    const {\n      department_objectId,\n      employee_name,\n      work_description,\n      avg_employee_productivity,\n      benchmark_employee_productivity,\n      date\n    } = this.state;\n    if (\n      department_objectId !== \"\" &&\n      employee_name !== \"\" &&\n      work_description !== \"\" &&\n      avg_employee_productivity !== \"\" &&\n      benchmark_employee_productivity !== \"\" &&\n      date !== \"\"\n    ) {\n      axios\n        .put(`/api/employee/${this.props.itemToEdit[0]._id}`, {\n          department_objectId,\n          employee_name,\n          work_description,\n          avg_employee_productivity,\n          benchmark_employee_productivity,\n          date\n        })\n        .then(() => {\n          editItemToParentState();\n          this.setState(\n            {\n              open: false,\n              openNewItemAddedConfirmSnackbar: true,\n              vertical: \"top\",\n              horizontal: \"center\"\n            },\n            () => {\n              history.push(\"/employee\");\n            }\n          );\n        })\n        .catch(error => {\n          console.log(error);\n          alert(\n            \"Ooops something wrong happened while editing, please try again\"\n          );\n        });\n    } else {\n      this.setState({ openEmptyTextFieldSnackbar: true });\n    }\n  };\n\n  handleCancel = () => {\n    this.setState({ open: false });\n  };\n\n  handleEnterEscapeKeyPress = e => {\n    if (e.key === \"Enter\") {\n      this.handleEditFormSubmit();\n    } else if (e.key === \"Escape\") {\n      this.handleCancel();\n    }\n  };\n\n  handleDepartmentNameChangeOnSelect = event => {\n    const selectedDepartmentObject = this.props.allDepartmentsForSiblingCommunication.filter(\n      item => item.name === event.target.value\n    );\n    this.setState({\n      department_name: event.target.value,\n      department_objectId: selectedDepartmentObject[0]._id\n    });\n  };\n\n  render() {\n    const { classes, allDepartmentsForSiblingCommunication } = this.props;\n    const {\n      department_objectId,\n      employee_name,\n      work_description,\n      avg_employee_productivity,\n      benchmark_employee_productivity,\n      department_name,\n      date\n    } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <div>\n            <IconButton onClick={this.handleFabOpen} aria-label=\"Edit\">\n              <EditIcon />\n            </IconButton>\n            <Dialog\n              open={this.state.open}\n              onClose={this.handleToggle}\n              aria-labelledby=\"form-dialog-title\"\n              fullWidth={true}\n              maxWidth={\"sm\"}\n              variant=\"contained\"\n              PaperProps={{\n                classes: {\n                  root: classes.paper\n                }\n              }}\n              onKeyDown={this.handleEnterEscapeKeyPress}\n            >\n              <DialogTitle\n                id=\"form-dialog-title\"\n                className={this.props.classes.styledHeader}\n                disableTypography\n              >\n                Edit Employees Record\n                <IconButton\n                  onClick={this.handleToggle}\n                  style={{ float: \"right\", marginBotton: \"20px\" }}\n                >\n                  <CancelIcon />\n                </IconButton>\n              </DialogTitle>\n              <DialogContent required>\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    select\n                    id=\"standard-number\"\n                    required\n                    autoFocus\n                    MenuProps={MenuProps}\n                    value={department_name}\n                    onChange={this.handleDepartmentNameChangeOnSelect}\n                    error={department_name === \"\"}\n                    helperText={\n                      this.state.department_name === \"\"\n                        ? \"Please enter the Department Name\"\n                        : \" \"\n                    }\n                    style={{ width: \"540px\", marginTop: \"30px\" }}\n                    label=\"Department Name\"\n                    InputProps={{\n                      classes: {\n                        underline: classes.underline\n                      }\n                    }}\n                  >\n                    {allDepartmentsForSiblingCommunication.map(item => (\n                      <MenuItem\n                        key={item.name}\n                        value={item.name}\n                        style={getStyles(item.name, this)}\n                      >\n                        {item.name}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </FormControl>\n\n                <TextField\n                  required\n                  autoFocus\n                  classes={{\n                    root: classes.space\n                  }}\n                  value={employee_name}\n                  onChange={e =>\n                    this.setState({\n                      employee_name: e.target.value\n                    })\n                  }\n                  error={employee_name === \"\"}\n                  helperText={\n                    employee_name === \"\" ? \"Please enter Employee Name\" : \" \"\n                  }\n                  label=\"Employee Name\"\n                  type=\"string\"\n                  fullWidth\n                  InputProps={{\n                    classes: {\n                      underline: classes.underline\n                    }\n                  }}\n                />\n                <TextField\n                  required\n                  autoFocus\n                  multiline\n                  classes={{\n                    root: classes.space\n                  }}\n                  value={work_description}\n                  onChange={e =>\n                    this.setState({\n                      work_description: e.target.value\n                    })\n                  }\n                  error={work_description === \"\"}\n                  helperText={\n                    work_description === \"\"\n                      ? \"Please enter Work Description\"\n                      : \" \"\n                  }\n                  label=\"Description of Work\"\n                  type=\"string\"\n                  fullWidth\n                  InputProps={{\n                    classes: {\n                      underline: classes.underline\n                    }\n                  }}\n                />\n\n                <TextField\n                  id=\"standard-number\"\n                  required\n                  autoFocus\n                  classes={{\n                    root: classes.space\n                  }}\n                  value={avg_employee_productivity}\n                  onChange={e =>\n                    this.setState({\n                      avg_employee_productivity: e.target.value\n                    })\n                  }\n                  error={\n                    avg_employee_productivity === \"\" ||\n                    avg_employee_productivity < 0\n                  }\n                  helperText={\n                    avg_employee_productivity === \"\"\n                      ? \"Please enter Berth Hire\"\n                      : \" \"\n                  }\n                  label=\"Avg. Employee Productivity\"\n                  type=\"number\"\n                  fullWidth\n                  InputProps={{\n                    classes: {\n                      underline: classes.underline\n                    }\n                  }}\n                />\n                <TextField\n                  id=\"standard-number\"\n                  required\n                  autoFocus\n                  classes={{\n                    root: classes.space\n                  }}\n                  value={benchmark_employee_productivity}\n                  onChange={e =>\n                    this.setState({\n                      benchmark_employee_productivity: e.target.value\n                    })\n                  }\n                  error={\n                    benchmark_employee_productivity === \"\" ||\n                    benchmark_employee_productivity < 0\n                  }\n                  helperText={\n                    benchmark_employee_productivity === \"\"\n                      ? \"Please enter Other Services\"\n                      : \" \"\n                  }\n                  label=\"Standard Employee Productivity\"\n                  type=\"number\"\n                  fullWidth\n                  InputProps={{\n                    classes: {\n                      underline: classes.underline\n                    }\n                  }}\n                />\n\n                <div\n                  style={{\n                    display: \"flex\"\n                  }}\n                >\n                  <div style={{ display: \"flex\", margin: \"auto\" }}>\n                    <DatePicker\n                      keyboard\n                      classes={{\n                        root: classes.space\n                      }}\n                      format=\"dd/MM/yyyy\"\n                      mask={value =>\n                        value\n                          ? [\n                              /\\d/,\n                              /\\d/,\n                              \"/\",\n                              /\\d/,\n                              /\\d/,\n                              \"/\",\n                              /\\d/,\n                              /\\d/,\n                              /\\d/,\n                              /\\d/\n                            ]\n                          : []\n                      }\n                      label=\"Date of Employment\"\n                      value={date}\n                      onChange={this.handleCommencementDateChange}\n                      disableOpenOnEnter\n                      animateYearScrolling={false}\n                      style={{ paddingRight: \"5px\" }}\n                    />\n                  </div>\n                </div>\n              </DialogContent>\n              <DialogActions\n                className={this.props.classes.styledFooter}\n                style={{\n                  margin: \"0px\"\n                }}\n              >\n                <Button\n                  onClick={this.handleCancel}\n                  variant=\"contained\"\n                  size=\"large\"\n                  classes={{\n                    root: classes.spaceDialogAction\n                  }}\n                  style={{ backgroundColor: \"#ee0053\" }}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={this.handleEditFormSubmit}\n                  classes={{\n                    root: classes.spaceDialogAction\n                  }}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  size=\"large\"\n                  disabled={\n                    department_objectId === \"\" ||\n                    employee_name === \"\" ||\n                    work_description === \"\" ||\n                    avg_employee_productivity === \"\" ||\n                    benchmark_employee_productivity === \"\" ||\n                    department_name === \"\" ||\n                    date === \"\"\n                  }\n                >\n                  Save\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <EditItemConfirmSnackbar\n              openNewItemAddedConfirmSnackbar={\n                this.state.openNewItemAddedConfirmSnackbar\n              }\n              closeNewItemConfirmSnackbar={this.closeNewItemConfirmSnackbar}\n            />\n\n            <EmptyFieldSnackBar\n              openEmptyTextFieldSnackbar={this.state.openEmptyTextFieldSnackbar}\n              closeEmptyFieldSnackbar={this.closeEmptyFieldSnackbar}\n            />\n          </div>\n        </MuiPickersUtilsProvider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nEditEmployee.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(EditEmployee);\n\n/* The Cancel button's color was done initially implementing MUI override - https://material-ui.com/customization/overrides/\nBut later changed to regular inline style, as I was not able to differentiate the coloring the Cancel button with Save\n*/\n","import { emphasize } from \"@material-ui/core/styles/colorManipulator\";\n\nvar styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  input: {\n    display: \"flex\",\n    borderRadius: 2,\n    border: \"1px solid #ced4da\",\n    backgroundColor: theme.palette.common.white,\n    fontSize: 14,\n    minHeight: 28,\n    padding: \"8px 0 8px 20px\",\n    opacity: \"1 !important\",\n    justifyContent: \"center\"\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\",\n    justifyContent: \"center\"\n  },\n  margin: {\n    margin: theme.spacing.unit\n  },\n  chip: {\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n    borderRadius: 0,\n    backgroundColor: \"#ffffff\",\n    fontWeight: \"bold\"\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\n  },\n  singleValue: {\n    fontSize: 14,\n    display: \"none\"\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 22,\n    fontSize: 14,\n    fontWeight: \"normal\",\n    color: \"rgba(9, 10, 60,0.38)\"\n  },\n  paper: {\n    position: \"absolute\",\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0\n  },\n  textSearchFilter: {\n    padding: theme.spacing.unit * 2,\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    display: \"flex\",\n    width: \"30em\",\n    flexDirection: \"row\"\n  },\n\n  currentMonthData: {\n    width: \"740px\",\n    height: \"55px\",\n    paddingLeft: \"15px\",\n    verticalAlign: \"center\",\n    textAlign: \"center\",\n    color: \"white\",\n    backgroundColor: \"#007bff\",\n    borderRadius: \"10px\",\n    fontSize: 20,\n    cursor: \"pointer\"\n  },\n  currentMonthDataEmployee: {\n    width: \"800px\",\n    height: \"55px\",\n    paddingLeft: \"15px\",\n    verticalAlign: \"center\",\n    textAlign: \"center\",\n    color: \"white\",\n    backgroundColor: \"#007bff\",\n    borderRadius: \"10px\",\n    fontSize: 20,\n    cursor: \"pointer\"\n  },\n  divider: {\n    height: theme.spacing.unit * 2\n  },\n  labelRoot: {\n    fontSize: 22,\n    fontWeight: \"bold\",\n    marginBottom: 0,\n    color: theme.palette.primary.dark,\n    position: \"absolute\",\n    left: \"-64px\",\n    top: \"-12px\"\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Select from \"react-select\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"material-ui/MenuItem\";\nimport styles from \"../commonStyles/SearchFilter-Styles.js\";\nimport toolbarStyles from \"../commonStyles/toolbarStyles\";\nimport combineStyles from \"../commonStyles/combineStyles\";\nimport SelectField from \"material-ui/SelectField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport \"../commonStyles/SearchFilter-InputField.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst NoOptionsMessage = props => {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n};\n\nconst inputComponent = ({ inputRef, ...props }) => {\n  return <div ref={inputRef} {...props} />;\n};\n\nconst Control = props => {\n  return (\n    <TextField\n      fullWidth\n      label=\"\"\n      InputLabelProps={{\n        classes: { root: props.selectProps.classes.labelRoot },\n        shrink: true\n      }}\n      InputProps={{\n        inputComponent,\n        disableUnderline: true,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps\n        }\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n};\n\nconst Option = props => {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n};\n\nconst Placeholder = props => {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n};\n\nconst SingleValue = props => {\n  return (\n    <Typography\n      className={props.selectProps.classes.singleValue}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n};\n\nconst ValueContainer = props => {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n};\n\nconst Menu = props => {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n};\n\nconst components = {\n  Control,\n  Menu,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer\n};\n\nclass SearchFilter extends React.Component {\n  state = {\n    query: \"\",\n    columnToQuery: \"department_name\",\n    arrowRef: null\n  };\n\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node\n    });\n  };\n\n  render() {\n    const { columnToQuery } = this.state;\n\n    // conditionally set the value of 'suggestions' with an IIFE\n    const suggestions = (() => {\n      switch (columnToQuery) {\n        case \"date\":\n          return this.props.totalItemsFormatted.map(item => ({\n            value: item.date,\n            label: item.date\n          }));\n        case \"employee_name\":\n          return this.props.totalItemsFormatted.map(item => ({\n            value: item.employee_name,\n            label: item.employee_name\n          }));\n        case \"date\":\n          return this.props.totalItemsFormatted.map(item => ({\n            value: item.work_description,\n            label: item.work_description\n          }));\n        case \"department_name\":\n          return this.props.totalItemsFormatted.map(item => ({\n            value: item.department_name,\n            label: item.department_name\n          }));\n      }\n    })();\n\n    const {\n      classes,\n      theme,\n      value,\n      onChange,\n      inputValue,\n      onInputChange\n    } = this.props;\n\n    const selectStyles = {\n      input: base => ({\n        ...base,\n        width: \"20em\",\n        marginTop: \"20px\",\n        color: theme.palette.text.primary,\n        \"& input\": {\n          font: \"inherit\"\n        }\n      })\n    };\n\n    return (\n      <Grid\n        container\n        spacing={0}\n        alignItems=\"center\"\n        justify=\"center\"\n        alignContent=\"center\"\n        direction=\"row\"\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }}\n      >\n        <Grid\n          item\n          xs={24}\n          style={{\n            marginRight: \"700px\"\n          }}\n        >\n          <Paper className={classes.textSearchFilter}>\n            <Select\n              classes={classes}\n              styles={selectStyles}\n              options={suggestions}\n              components={components}\n              inputId=\"fb-gg-search\"\n              value={value}\n              onChange={onChange}\n              inputValue={inputValue}\n              onInputChange={onInputChange}\n              placeholder=\"Search\"\n              multi=\"true\"\n            />\n            <SelectField\n              style={{\n                marginLeft: \"1em\"\n              }}\n              floatingLabelText=\"Select a column\"\n              value={this.state.columnToQuery}\n              onChange={(event, index, value) =>\n                this.setState({ columnToQuery: value }, () => {\n                  this.props.handleColumnToQuery(this.state.columnToQuery);\n                })\n              }\n            >\n              <MenuItem value=\"employee_name\" primaryText=\"Employment Name\" />\n              <MenuItem\n                value=\"work_description\"\n                primaryText=\"Work Description\"\n              />\n              <MenuItem value=\"department_name\" primaryText=\"Department Name\" />\n              <MenuItem value=\"date\" primaryText=\"Employment Date\" />\n            </SelectField>\n\n            <Tooltip\n              title={\n                <React.Fragment>\n                  <h2>Clear the Search Filter</h2>\n                  <span className={classes.arrow} ref={this.handleArrowRef} />\n                </React.Fragment>\n              }\n              placement=\"top-end\"\n              classes={{\n                tooltip: classes.bootstrapTooltip,\n                popper: classes.bootstrapPopper,\n                tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                tooltipPlacementRight: classes.bootstrapPlacementRight,\n                tooltipPlacementTop: classes.bootstrapPlacementTop,\n                tooltipPlacementBottom: classes.bootstrapPlacementBottom\n              }}\n              PopperProps={{\n                popperOptions: {\n                  modifiers: {\n                    arrow: {\n                      enabled: Boolean(this.state.arrowRef),\n                      element: this.state.arrowRef\n                    }\n                  }\n                }\n              }}\n              onOpen={() =>\n                this.props.setTextFilterTooltip(\"Clear the Search Filter\")\n              }\n            >\n              <IconButton\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                className={classes.margin}\n                onClick={this.props.closeSearchFilterCompOnClick}\n                style={{ marginLeft: \"15px\" }}\n              >\n                <CancelIcon />\n              </IconButton>\n            </Tooltip>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nSearchFilter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nconst combinedStyles = combineStyles(styles, toolbarStyles);\n\nexport default withStyles(combinedStyles, { withTheme: true })(SearchFilter);\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MySnackbarContent from \"../../UtilFunctions/MySnackbarContent\";\nimport { withStyles } from \"@material-ui/core\";\nimport { styles } from \"../../commonStyles/AddNewItemStyles\";\nimport PropTypes from \"prop-types\";\n\nclass WrongDateRangeSnackBar extends Component {\n  state = {\n    vertical: \"top\",\n    horizontal: \"center\"\n  };\n\n  render() {\n    const {\n      classes,\n      closeWrongDateRangeSnackBar,\n      openWrongDateRangeSnackBar\n    } = this.props;\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        open={openWrongDateRangeSnackBar}\n        autoHideDuration={6000}\n        onClose={closeWrongDateRangeSnackBar}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n      >\n        <MySnackbarContent\n          onClose={closeWrongDateRangeSnackBar}\n          variant=\"warning\"\n          className={classes.margin}\n          message=\"The Start Date should be equal to or earlier than the End Date !\"\n        />\n      </Snackbar>\n    );\n  }\n}\n\nWrongDateRangeSnackBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(WrongDateRangeSnackBar);\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MySnackbarContent from \"../../UtilFunctions/MySnackbarContent\";\nimport { withStyles } from \"@material-ui/core\";\nimport { styles } from \"../../commonStyles/AddNewItemStyles\";\nimport PropTypes from \"prop-types\";\n\nclass NoRecordForDateRangeQuerySnackbar extends Component {\n  state = {\n    vertical: \"top\",\n    horizontal: \"center\"\n  };\n\n  render() {\n    const {\n      classes,\n      openNoRecordForDateRangeQuery,\n      closeNoRecordForDateRangeQuery\n    } = this.props;\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        open={openNoRecordForDateRangeQuery}\n        autoHideDuration={4000}\n        onClose={closeNoRecordForDateRangeQuery}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n      >\n        <MySnackbarContent\n          onClose={closeNoRecordForDateRangeQuery}\n          variant=\"info\"\n          className={classes.margin}\n          message=\"No record found between the date ranges you searched for !\"\n        />\n      </Snackbar>\n    );\n  }\n}\n\nNoRecordForDateRangeQuerySnackbar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NoRecordForDateRangeQuerySnackbar);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"material-ui-pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport axios from \"axios\";\nimport WrongDateRangeSnackBar from \"./Snackbars/WrongDateRangeSnackBar\";\nimport EmptyFieldSnackBar from \"./Snackbars/EmptyFieldSnackBar\";\nimport NoRecordForDateRangeQuery from \"./Snackbars/NoRecordForDateRangeQuerySnackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport styles from \"../commonStyles/SearchFilter-Styles.js\";\nimport toolbarStyles from \"../commonStyles/toolbarStyles\";\nimport combineStyles from \"../commonStyles/combineStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nconst moment = require(\"moment\");\n\nclass DateRangeFilter extends Component {\n  state = {\n    start_date: new Date(),\n    end_date: new Date(),\n    dateRangeQueryResult: [],\n    totalDateRangeSearchResultChild: [],\n    openWrongDateRangeSnackBar: false,\n    openEmptyTextFieldSnackbar: false,\n    noRecordForDateRangeQuery: false,\n    arrowRef: null\n  };\n\n  // function to handle the placement of the arrow on top of the Tooltip\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node\n    });\n  };\n\n  closeWrongDateRangeSnackBar = () => {\n    this.setState({ openWrongDateRangeSnackBar: false });\n  };\n\n  closeNoRecordForDateRangeQuery = (event, reason) => {\n    this.setState({ noRecordForDateRangeQuery: false });\n  };\n\n  closeEmptyFieldSnackbar = () => {\n    this.setState({ openEmptyTextFieldSnackbar: false });\n  };\n\n  //   moment(start_date).format(\"MMM D, YYYY 12:00:00 \") >\n  //   moment(end_date).format(\"MMM D, YYYY 12:00:00 \")\n  handleStartDateChange = date => {\n    if (this.state.end_date === \"\" || this.props.end_date === \"\") {\n      this.setState(\n        {\n          start_date: date\n        },\n        () => {\n          this.props.handleStartDateChangeParent(date);\n        }\n      );\n    } else if (this.state.end_date !== \"\" || this.props.end_date !== \"\") {\n      this.setState(\n        {\n          start_date: date\n        },\n        () => {\n          const { start_date, end_date } = this.state;\n\n          if (start_date === \"\" && end_date !== \"\") {\n            this.setState({ openEmptyTextFieldSnackbar: true });\n          } else if (\n            moment(start_date).format(\"YYYY-MM-DD\") >\n            moment(end_date).format(\"YYYY-MM-DD\")\n          ) {\n            this.setState({ openWrongDateRangeSnackBar: true });\n          } else if (start_date && start_date <= end_date) {\n            axios\n              .all([\n                axios.post(\n                  \"/api/employee/paginate/daterange\",\n                  {\n                    start_date,\n                    end_date\n                  },\n                  {\n                    params: {\n                      page: this.props.page,\n                      rowsperpage: this.props.rowsPerPage\n                    }\n                  }\n                ),\n                axios.post(\"/api/employee/daterange\", {\n                  start_date,\n                  end_date\n                })\n              ])\n              .then(\n                axios.spread((paginatedRange, nonPaginatedRange) => {\n                  this.setState(\n                    {\n                      dateRangeQueryResult: paginatedRange.data,\n                      totalDateRangeSearchResultChild: nonPaginatedRange.data\n                    },\n                    () => {\n                      if (this.state.dateRangeQueryResult.length === 0) {\n                        this.setState({ noRecordForDateRangeQuery: true });\n                      }\n                    }\n                  );\n                  this.props.ifUserWantsDateRangeData(\n                    this.state.dateRangeQueryResult,\n                    this.state.totalDateRangeSearchResultChild\n                  );\n                  this.props.handleStartDateChangeParent(date);\n                })\n              );\n          }\n        }\n      );\n    }\n  };\n\n  handleEndDateChange = date => {\n    this.setState(\n      {\n        end_date: date\n      },\n      () => {\n        const { start_date, end_date } = this.state;\n\n        if (start_date === \"\" && end_date !== \"\") {\n          this.setState({ openEmptyTextFieldSnackbar: true });\n        } else if (\n          moment(start_date).format(\"YYYY-MM-DD\") >\n          moment(end_date).format(\"YYYY-MM-DD\")\n        ) {\n          this.setState({ openWrongDateRangeSnackBar: true });\n        } else if (start_date && start_date <= end_date) {\n          axios\n            .all([\n              axios.post(\n                \"/api/employee/paginate/daterange\",\n                {\n                  start_date,\n                  end_date\n                },\n                {\n                  params: {\n                    page: this.props.page,\n                    rowsperpage: this.props.rowsPerPage\n                  }\n                }\n              ),\n              axios.post(\"/api/employee/daterange\", {\n                start_date,\n                end_date\n              })\n            ])\n            .then(\n              axios.spread((paginatedRange, nonPaginatedRange) => {\n                this.setState(\n                  {\n                    dateRangeQueryResult: paginatedRange.data,\n                    totalDateRangeSearchResultChild: nonPaginatedRange.data\n                  },\n                  () => {\n                    if (this.state.dateRangeQueryResult.length === 0) {\n                      this.setState({ noRecordForDateRangeQuery: true });\n                    }\n                  }\n                );\n                this.props.ifUserWantsDateRangeData(\n                  this.state.dateRangeQueryResult,\n                  this.state.totalDateRangeSearchResultChild\n                );\n                this.props.handleEndDateChangeParent(date);\n              })\n            );\n        }\n      }\n    );\n  };\n\n  closeDateRangeQuery = () => {\n    this.setState(\n      {\n        start_date: new Date(),\n        end_date: new Date(),\n        dateRangeQueryResult: [],\n        totalDateRangeSearchResultChild: []\n      },\n      () => {\n        this.props.ifUserWantsDateRangeData(\n          this.state.dateRangeQueryResult,\n          this.state.totalDateRangeSearchResultChild\n        );\n        this.props.closeDateRangeFilterCompOnClick();\n        this.props.clearDateRangeTooltip();\n      }\n    );\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Grid\n          container\n          spacing={0}\n          alignItems=\"center\"\n          justify=\"center\"\n          alignContent=\"center\"\n          direction=\"row\"\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <Grid\n            item\n            xs={12}\n            style={{\n              marginRight: \"700px\"\n            }}\n          >\n            <Paper className={classes.textSearchFilter}>\n              <DatePicker\n                keyboard\n                margin=\"normal\"\n                classes={{\n                  root: classes.space\n                }}\n                format=\"dd/MM/yyyy\"\n                mask={value =>\n                  value\n                    ? [/\\d/, /\\d/, \"/\", /\\d/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/]\n                    : []\n                }\n                label=\"Date of Employment (starting search date)\"\n                disableOpenOnEnter\n                animateYearScrolling={false}\n                style={{ paddingRight: \"5px\" }}\n                value={\n                  this.props.ifUserSearchedDateRange\n                    ? this.props.start_date\n                    : this.state.start_date\n                }\n                onChange={this.handleStartDateChange}\n              />\n              <DatePicker\n                keyboard\n                margin=\"normal\"\n                classes={{\n                  root: classes.space\n                }}\n                format=\"dd/MM/yyyy\"\n                mask={value =>\n                  value\n                    ? [/\\d/, /\\d/, \"/\", /\\d/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/]\n                    : []\n                }\n                label=\"Date of Employment (ending search date)\"\n                disableOpenOnEnter\n                animateYearScrolling={false}\n                style={{ paddingLeft: \"5px\" }}\n                value={\n                  this.props.ifUserSearchedDateRange\n                    ? this.props.end_date\n                    : this.state.end_date\n                }\n                onChange={this.handleEndDateChange}\n              />\n              <Tooltip\n                title={\n                  <React.Fragment>\n                    <h2>Clear the Date Range Search Filter</h2>\n                    <span className={classes.arrow} ref={this.handleArrowRef} />\n                  </React.Fragment>\n                }\n                placement=\"top-end\"\n                classes={{\n                  tooltip: classes.bootstrapTooltip,\n                  popper: classes.bootstrapPopper,\n                  tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                  tooltipPlacementRight: classes.bootstrapPlacementRight,\n                  tooltipPlacementTop: classes.bootstrapPlacementTop,\n                  tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                }}\n                PopperProps={{\n                  popperOptions: {\n                    modifiers: {\n                      arrow: {\n                        enabled: Boolean(this.state.arrowRef),\n                        element: this.state.arrowRef\n                      }\n                    }\n                  }\n                }}\n                onOpen={() =>\n                  this.props.setDateRangeTooltip(\n                    \"Clear the Date Range Search Filter\"\n                  )\n                }\n              >\n                <IconButton\n                  variant=\"contained\"\n                  size=\"small\"\n                  color=\"primary\"\n                  className={classes.margin}\n                  onClick={this.closeDateRangeQuery}\n                  style={{ paddingLeft: \"55px\", marginTop: 0 }}\n                >\n                  <CancelIcon />\n                </IconButton>\n              </Tooltip>\n              <WrongDateRangeSnackBar\n                openWrongDateRangeSnackBar={\n                  this.state.openWrongDateRangeSnackBar\n                }\n                closeWrongDateRangeSnackBar={this.closeWrongDateRangeSnackBar}\n              />\n              <EmptyFieldSnackBar\n                openEmptyTextFieldSnackbar={\n                  this.state.openEmptyTextFieldSnackbar\n                }\n                closeEmptyFieldSnackbar={this.closeEmptyFieldSnackbar}\n              />\n              <NoRecordForDateRangeQuery\n                openNoRecordForDateRangeQuery={\n                  this.state.noRecordForDateRangeQuery\n                }\n                closeNoRecordForDateRangeQuery={\n                  this.closeNoRecordForDateRangeQuery\n                }\n              />\n            </Paper>\n          </Grid>\n        </Grid>\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n\nDateRangeFilter.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst combinedStyles = combineStyles(styles, toolbarStyles);\n\nexport default withStyles(combinedStyles)(DateRangeFilter);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport styles from \"../commonStyles/SearchFilter-Styles.js\";\nimport toolbarStyles from \"../commonStyles/toolbarStyles\";\nimport combineStyles from \"../commonStyles/combineStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nconst moment = require(\"moment\");\n\nclass CurrentMonthEmployee extends Component {\n  state = {\n    arrowRef: null\n  };\n\n  // function to handle the placement of the arrow on top of the Tooltip\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node\n    });\n  };\n\n  closeCurrentMonthData = () => {\n    this.props.closeCurrentMonthDataCompOnClick();\n    this.props.clearDateRangeTooltip();\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    const momentMonthNumber = moment().month();\n    const currentMonth = moment(moment().month(momentMonthNumber)).format(\n      \"MMMM\"\n    );\n\n    return (\n      <Paper className={classes.currentMonthDataEmployee}>\n        Showing Employees only for {currentMonth}\n        <Tooltip\n          title={\n            <React.Fragment>\n              <h2>\n                Clear filter for only {currentMonth} and show all Berth\n                Throughput\n              </h2>\n              <span className={classes.arrow} ref={this.handleArrowRef} />\n            </React.Fragment>\n          }\n          placement=\"top-end\"\n          classes={{\n            tooltip: classes.bootstrapTooltip,\n            popper: classes.bootstrapPopper,\n            tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n            tooltipPlacementRight: classes.bootstrapPlacementRight,\n            tooltipPlacementTop: classes.bootstrapPlacementTop,\n            tooltipPlacementBottom: classes.bootstrapPlacementBottom\n          }}\n          PopperProps={{\n            popperOptions: {\n              modifiers: {\n                arrow: {\n                  enabled: Boolean(this.state.arrowRef),\n                  element: this.state.arrowRef\n                }\n              }\n            }\n          }}\n          onOpen={() =>\n            this.props.setDateRangeTooltip(\"Clear the Date Range Search Filter\")\n          }\n        >\n          <IconButton\n            variant=\"contained\"\n            size=\"small\"\n            className={classes.margin}\n            onClick={this.closeCurrentMonthData}\n            style={{\n              marginLeft: \"55px\",\n              marginTop: 0,\n              color: \"white\"\n            }}\n          >\n            <CancelIcon style={{ marginLeft: \"15px\", marginRight: 0 }} />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    );\n  }\n}\n\nCurrentMonthEmployee.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst combinedStyles = combineStyles(styles, toolbarStyles);\n\nexport default withStyles(combinedStyles)(CurrentMonthEmployee);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport toolbarStyles from \"../commonStyles/toolbarStyles\";\nimport { CSVLink } from \"react-csv\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ShowEmployee from \"./ShowEmployees\";\nimport EditEmployee from \"./EditEmployees\";\nimport SearchFilter from \"./SearchFilterEmployees\";\nimport DateRangeFilter from \"./DateRangeFilterEmployees\";\nimport CurrentMonthEmployee from \"./CurrentMonthEmployees\";\nimport Paper from \"@material-ui/core/Paper\";\nimport requiredIf from \"react-required-if\"; // React PropType to conditionally add .isRequired based on other props\nconst moment = require(\"moment\");\n\nclass TableToolbarEmployee extends Component {\n  state = {\n    shouldSearchFilterCompOpen: false,\n    shouldDateRangeFilterCompOpen: false,\n    shouldCurrentMonthDataCompOpen: false,\n    shouldCurrentDateDataCompOpen: false,\n    searchValue: \"\",\n    searchSelection: \"\",\n    dateRangeTooltip: \"\",\n    textFilterCancelTooltip: \"\",\n    arrowRef: null\n  };\n\n  // function to handle the placement of the arrow on top of the Tooltip\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node\n    });\n  };\n\n  setDateRangeTooltip = tooltipfromchild => {\n    this.setState({\n      dateRangeTooltip: tooltipfromchild\n    });\n  };\n\n  clearDateRangeTooltip = () => {\n    this.setState({\n      dateRangeTooltip: \"\"\n    });\n  };\n\n  setTextFilterTooltip = tooltipfromchild => {\n    this.setState({\n      textFilterCancelTooltip: tooltipfromchild\n    });\n  };\n\n  clearTextFilterTooltip = () => {\n    this.setState({\n      textFilterCancelTooltip: \"\"\n    });\n  };\n\n  handleSearchInput = (e, { action }) => {\n    if (\n      action === \"menu-close\" ||\n      action === \"input-blur\" ||\n      action === \"set-value\"\n    ) {\n      return;\n    } else {\n      this.setState({ searchValue: e });\n    }\n  };\n\n  // In this TableToolbarEmployee component, I set the searchValue for the query, and with the handleQueryString() function I pass that value up to the parent List component .\n  handleSearchSelection = ({ value }) => {\n    this.setState(\n      {\n        searchSelection: value,\n        searchValue: value\n      },\n      () => {\n        if (this.state.searchValue) {\n          this.props.handleQueryString(this.state.searchValue);\n        }\n      }\n    );\n  };\n\n  openSearchFilterCompOnClick = () => {\n    if (this.state.shouldSearchFilterCompOpen === false) {\n      this.setState({\n        shouldSearchFilterCompOpen: true\n      });\n    }\n  };\n\n  closeSearchFilterCompOnClick = () => {\n    this.setState(\n      {\n        shouldSearchFilterCompOpen: false,\n        searchValue: \"\"\n      },\n      () => {\n        this.props.clearAllQueryString();\n        this.clearTextFilterTooltip();\n      }\n    );\n  };\n\n  closeCurrentMonthDataCompOnClick = () => {\n    this.setState({\n      shouldCurrentMonthDataCompOpen: false\n    });\n    this.props.clearCurrentMonthSearch();\n  };\n\n  closeCurrentDateDataCompOnClick = () => {\n    this.setState({\n      shouldCurrentDateDataCompOpen: false\n    });\n    this.props.clearCurrentDateSearch();\n  };\n\n  openDateRangeFilterCompOnClick = () => {\n    if (this.state.shouldDateRangeFilterCompOpen === false) {\n      this.setState({\n        shouldDateRangeFilterCompOpen: true\n      });\n    }\n  };\n\n  closeDateRangeFilterCompOnClick = () => {\n    this.setState(\n      {\n        shouldDateRangeFilterCompOpen: false\n      },\n      () => {\n        this.props.clearUserSearchedDateRange();\n      }\n    );\n  };\n\n  render() {\n    const {\n      numSelected,\n      confirmDeleteCustom,\n      checkedItems,\n      itemToEdit,\n      editItem,\n      unSelectItems,\n      classes\n    } = this.props;\n\n    const { searchValue, searchSelection } = this.state;\n\n    const momentMonthNumber = moment().month();\n    const currentMonth = moment(moment().month(momentMonthNumber)).format(\n      \"MMMM\"\n    );\n\n    return (\n      <Toolbar\n        className={classNames(classes.root, {\n          [classes.highlight]: numSelected > 0\n        })}\n      >\n        <div className={classes.title}>\n          {numSelected === 1 ? (\n            <Typography color=\"inherit\" variant=\"subtitle1\">\n              {numSelected} item selected\n            </Typography>\n          ) : numSelected > 1 ? (\n            <Typography color=\"inherit\" variant=\"subtitle1\">\n              {numSelected} items selected\n            </Typography>\n          ) : (\n            <Typography variant=\"h6\" id=\"tableTitle\">\n              Employees\n            </Typography>\n          )}\n        </div>\n        <div className={classes.spacer} />\n\n        {/* This Paper class will render CURRENT MONTH data */}\n        {!this.state.shouldDateRangeFilterCompOpen &&\n        !this.state.shouldSearchFilterCompOpen &&\n        !this.state.shouldCurrentMonthDataCompOpen &&\n        !this.state.shouldCurrentDateDataCompOpen ? (\n          <Paper\n            className={classes.monthlyData}\n            onClick={() =>\n              this.setState(\n                {\n                  shouldCurrentMonthDataCompOpen: true\n                },\n                () => {\n                  this.props.getCurrentMonthData();\n                }\n              )\n            }\n          >\n            Employees in {currentMonth}\n          </Paper>\n        ) : null}\n        <div className={classes.spacer} />\n        <div className={classes.actions}>\n          {numSelected > 0 ? (\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              {numSelected === 1 ? (\n                <Tooltip\n                  title={\n                    <React.Fragment>\n                      <h2>Download data for the selected item(s)</h2>\n                      <span\n                        className={classes.arrow}\n                        ref={this.handleArrowRef}\n                      />\n                    </React.Fragment>\n                  }\n                  placement=\"top-end\"\n                  classes={{\n                    tooltip: classes.bootstrapTooltip,\n                    popper: classes.bootstrapPopper,\n                    tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                    tooltipPlacementRight: classes.bootstrapPlacementRight,\n                    tooltipPlacementTop: classes.bootstrapPlacementTop,\n                    tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                  }}\n                  PopperProps={{\n                    popperOptions: {\n                      modifiers: {\n                        arrow: {\n                          enabled: Boolean(this.state.arrowRef),\n                          element: this.state.arrowRef\n                        }\n                      }\n                    }\n                  }}\n                >\n                  <CSVLink\n                    data={this.props.downloadSelectedItems}\n                    style={{ marginRight: \"24px\", paddingTop: \"25px\" }}\n                  >\n                    <FontAwesomeIcon icon=\"download\" size=\"1x\" color=\"black\" />\n                  </CSVLink>\n                </Tooltip>\n              ) : null}\n              <Tooltip\n                title={\n                  <React.Fragment>\n                    <h2>View Item Details</h2>\n                    <span className={classes.arrow} ref={this.handleArrowRef} />\n                  </React.Fragment>\n                }\n                placement=\"top-end\"\n                classes={{\n                  tooltip: classes.bootstrapTooltip,\n                  popper: classes.bootstrapPopper,\n                  tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                  tooltipPlacementRight: classes.bootstrapPlacementRight,\n                  tooltipPlacementTop: classes.bootstrapPlacementTop,\n                  tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                }}\n                PopperProps={{\n                  popperOptions: {\n                    modifiers: {\n                      arrow: {\n                        enabled: Boolean(this.state.arrowRef),\n                        element: this.state.arrowRef\n                      }\n                    }\n                  }\n                }}\n              >\n                <IconButton\n                  aria-label=\"Show\"\n                  variant=\"contained\"\n                  className={classes.button}\n                  style={{ marginRight: \"20px\" }}\n                >\n                  {numSelected === 1 ? (\n                    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                      <ShowEmployee\n                        itemToEdit={itemToEdit}\n                        checkedItems={this.props.checkedItems}\n                      />\n                    </div>\n                  ) : null}\n                </IconButton>\n              </Tooltip>\n\n              {numSelected > 1 ? (\n                <Tooltip\n                  title={\n                    <React.Fragment>\n                      <h2>Download data for the selected item(s)</h2>\n                      <span\n                        className={classes.arrow}\n                        ref={this.handleArrowRef}\n                      />\n                    </React.Fragment>\n                  }\n                  placement=\"top-end\"\n                  classes={{\n                    tooltip: classes.bootstrapTooltip,\n                    popper: classes.bootstrapPopper,\n                    tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                    tooltipPlacementRight: classes.bootstrapPlacementRight,\n                    tooltipPlacementTop: classes.bootstrapPlacementTop,\n                    tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                  }}\n                  PopperProps={{\n                    popperOptions: {\n                      modifiers: {\n                        arrow: {\n                          enabled: Boolean(this.state.arrowRef),\n                          element: this.state.arrowRef\n                        }\n                      }\n                    }\n                  }}\n                >\n                  <CSVLink\n                    data={this.props.downloadSelectedItems}\n                    style={{ marginRight: \"24px\", paddingTop: \"13px\" }}\n                  >\n                    <FontAwesomeIcon icon=\"download\" size=\"1x\" color=\"black\" />\n                  </CSVLink>\n                </Tooltip>\n              ) : null}\n              <Tooltip\n                title={\n                  <React.Fragment>\n                    <h2>Delete</h2>\n                    <span className={classes.arrow} ref={this.handleArrowRef} />\n                  </React.Fragment>\n                }\n                placement=\"top-end\"\n                classes={{\n                  tooltip: classes.bootstrapTooltip,\n                  popper: classes.bootstrapPopper,\n                  tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                  tooltipPlacementRight: classes.bootstrapPlacementRight,\n                  tooltipPlacementTop: classes.bootstrapPlacementTop,\n                  tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                }}\n                PopperProps={{\n                  popperOptions: {\n                    modifiers: {\n                      arrow: {\n                        enabled: Boolean(this.state.arrowRef),\n                        element: this.state.arrowRef\n                      }\n                    }\n                  }\n                }}\n              >\n                <IconButton\n                  aria-label=\"Delete\"\n                  onClick={confirmDeleteCustom.bind(null, checkedItems)}\n                  variant=\"contained\"\n                  className={classes.button}\n                  style={{ marginRight: \"20px\" }}\n                >\n                  <DeleteIcon className={classes.rightIcon} />\n                </IconButton>\n              </Tooltip>\n              <Tooltip\n                title={\n                  <React.Fragment>\n                    <h2>Edit</h2>\n                    <span className={classes.arrow} ref={this.handleArrowRef} />\n                  </React.Fragment>\n                }\n                placement=\"top-end\"\n                classes={{\n                  tooltip: classes.bootstrapTooltip,\n                  popper: classes.bootstrapPopper,\n                  tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                  tooltipPlacementRight: classes.bootstrapPlacementRight,\n                  tooltipPlacementTop: classes.bootstrapPlacementTop,\n                  tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                }}\n                PopperProps={{\n                  popperOptions: {\n                    modifiers: {\n                      arrow: {\n                        enabled: Boolean(this.state.arrowRef),\n                        element: this.state.arrowRef\n                      }\n                    }\n                  }\n                }}\n              >\n                <IconButton\n                  aria-label=\"Edit\"\n                  variant=\"contained\"\n                  className={classes.button}\n                >\n                  {numSelected === 1 ? (\n                    <EditEmployee\n                      editItemToParentState={editItem}\n                      itemToEdit={itemToEdit}\n                      unSelectItems={unSelectItems}\n                      checkedItems={this.props.checkedItems}\n                      allDepartmentsForSiblingCommunication={\n                        this.props.allDepartmentsForSiblingCommunication\n                      }\n                    />\n                  ) : null}\n                </IconButton>\n              </Tooltip>\n            </div>\n          ) : (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                margin: \"auto\",\n                width: \"100%\"\n              }}\n            >\n              <div className={classes.spacerCurrentMonth} />\n              {!this.state.shouldDateRangeFilterCompOpen &&\n              !this.state.shouldSearchFilterCompOpen ? (\n                <Tooltip\n                  title={\n                    <React.Fragment>\n                      <h2>Download entire data</h2>\n                      <span\n                        className={classes.arrow}\n                        ref={this.handleArrowRef}\n                      />\n                    </React.Fragment>\n                  }\n                  placement=\"top-end\"\n                  classes={{\n                    tooltip: classes.bootstrapTooltip,\n                    popper: classes.bootstrapPopper,\n                    tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                    tooltipPlacementRight: classes.bootstrapPlacementRight,\n                    tooltipPlacementTop: classes.bootstrapPlacementTop,\n                    tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                  }}\n                  PopperProps={{\n                    popperOptions: {\n                      modifiers: {\n                        arrow: {\n                          enabled: Boolean(this.state.arrowRef),\n                          element: this.state.arrowRef\n                        }\n                      }\n                    }\n                  }}\n                >\n                  <CSVLink\n                    data={this.props.totalItemsFormatted}\n                    style={{ marginRight: \"24px\", paddingTop: \"13px\" }}\n                  >\n                    <FontAwesomeIcon\n                      icon=\"download\"\n                      size=\"1x\"\n                      color=\"#0099e5\"\n                    />\n                  </CSVLink>\n                </Tooltip>\n              ) : null}\n\n              {this.state.shouldCurrentMonthDataCompOpen &&\n              !this.state.shouldCurrentDateDataCompOpen ? (\n                <CurrentMonthEmployee\n                  setDateRangeTooltip={this.setDateRangeTooltip}\n                  closeCurrentMonthDataCompOnClick={\n                    this.closeCurrentMonthDataCompOnClick\n                  }\n                  clearDateRangeTooltip={this.clearDateRangeTooltip}\n                />\n              ) : null}\n\n              <Tooltip\n                title={\n                  <React.Fragment>\n                    {this.state.dateRangeTooltip === \"\" ? (\n                      <h2>Find all Employees between two dates </h2>\n                    ) : null}\n                    <span className={classes.arrow} ref={this.handleArrowRef} />\n                  </React.Fragment>\n                }\n                placement=\"top-end\"\n                classes={{\n                  tooltip: classes.bootstrapTooltip,\n                  popper: classes.arrowPopper,\n                  tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                  tooltipPlacementRight: classes.bootstrapPlacementRight,\n                  tooltipPlacementTop: classes.bootstrapPlacementTop,\n                  tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                }}\n                PopperProps={{\n                  popperOptions: {\n                    modifiers: {\n                      arrow: {\n                        enabled: Boolean(this.state.arrowRef),\n                        element: this.state.arrowRef\n                      }\n                    }\n                  }\n                }}\n              >\n                <IconButton\n                  aria-label=\"Filter list\"\n                  onClick={this.openDateRangeFilterCompOnClick}\n                  style={{ marginRight: \"15px\" }}\n                >\n                  {this.state.shouldDateRangeFilterCompOpen ? (\n                    <DateRangeFilter\n                      closeDateRangeFilterCompOnClick={\n                        this.closeDateRangeFilterCompOnClick\n                      }\n                      totalItemsFormatted={this.props.totalItemsFormatted}\n                      ifUserWantsDateRangeData={\n                        this.props.ifUserWantsDateRangeData\n                      }\n                      page={this.props.page}\n                      rowsPerPage={this.props.rowsPerPage}\n                      handleStartDateChangeParent={\n                        this.props.handleStartDateChangeParent\n                      }\n                      handleEndDateChangeParent={\n                        this.props.handleEndDateChangeParent\n                      }\n                      ifUserSearchedDateRange={\n                        this.props.ifUserSearchedDateRange\n                      }\n                      start_date={this.props.start_date}\n                      end_date={this.props.end_date}\n                      setDateRangeTooltip={this.setDateRangeTooltip}\n                      clearDateRangeTooltip={this.clearDateRangeTooltip}\n                    />\n                  ) : this.state.shouldSearchFilterCompOpen ||\n                    this.state.shouldCurrentMonthDataCompOpen ||\n                    this.state.shouldCurrentDateDataCompOpen ? null : (\n                    <FontAwesomeIcon\n                      icon=\"calendar-alt\"\n                      color=\"#0099e5\"\n                      size=\"1x\"\n                    />\n                  )}\n                </IconButton>\n              </Tooltip>\n              <Tooltip\n                title={\n                  <React.Fragment>\n                    {this.state.textFilterCancelTooltip === \"\" ? (\n                      <h2>Filter/Search Table</h2>\n                    ) : null}\n                    <span className={classes.arrow} ref={this.handleArrowRef} />\n                  </React.Fragment>\n                }\n                placement=\"top-end\"\n                classes={{\n                  tooltip: classes.bootstrapTooltip,\n                  popper: classes.bootstrapPopper,\n                  tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                  tooltipPlacementRight: classes.bootstrapPlacementRight,\n                  tooltipPlacementTop: classes.bootstrapPlacementTop,\n                  tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                }}\n                PopperProps={{\n                  popperOptions: {\n                    modifiers: {\n                      arrow: {\n                        enabled: Boolean(this.state.arrowRef),\n                        element: this.state.arrowRef\n                      }\n                    }\n                  }\n                }}\n              >\n                <IconButton\n                  aria-label=\"Filter list\"\n                  onClick={this.openSearchFilterCompOnClick}\n                >\n                  {this.state.shouldSearchFilterCompOpen ? (\n                    <SearchFilter\n                      closeSearchFilterCompOnClick={\n                        this.closeSearchFilterCompOnClick\n                      }\n                      totalItemsFormatted={this.props.totalItemsFormatted}\n                      handleColumnToQuery={this.props.handleColumnToQuery}\n                      value={searchSelection}\n                      onChange={e => this.handleSearchSelection(e)}\n                      inputValue={searchValue}\n                      onInputChange={(e, action) =>\n                        this.handleSearchInput(e, action)\n                      }\n                      style={{ marginRight: \"100px\" }}\n                      setTextFilterTooltip={this.setTextFilterTooltip}\n                      clearTextFilterTooltip={this.clearTextFilterTooltip}\n                    />\n                  ) : this.state.shouldDateRangeFilterCompOpen ||\n                    this.state.shouldCurrentMonthDataCompOpen ||\n                    this.state.shouldCurrentDateDataCompOpen ? null : (\n                    <FontAwesomeIcon icon=\"filter\" color=\"#0099e5\" size=\"1x\" />\n                  )}\n                </IconButton>\n              </Tooltip>\n            </div>\n          )}\n        </div>\n      </Toolbar>\n    );\n  }\n}\n\nTableToolbarEmployee.propTypes = {\n  classes: PropTypes.object.isRequired,\n  totalItemsFormatted: PropTypes.array.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  confirmDeleteCustom: PropTypes.func.isRequired,\n  checkedItems: PropTypes.array.isRequired,\n  itemToEdit: requiredIf(\n    PropTypes.array,\n    props => props.checkedItems.length === 1\n  ),\n  editItem: PropTypes.func.isRequired,\n  handleQueryString: PropTypes.func.isRequired,\n  handleColumnToQuery: PropTypes.func.isRequired,\n  clearAllQueryString: PropTypes.func.isRequired,\n  ifUserWantsDateRangeData: PropTypes.func.isRequired,\n  unSelectItems: PropTypes.func.isRequired,\n  downloadSelectedItems: PropTypes.array.isRequired,\n  clearUserSearchedDateRange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  handleStartDateChangeParent: PropTypes.func.isRequired,\n  handleEndDateChangeParent: PropTypes.func.isRequired,\n  ifUserSearchedDateRange: PropTypes.bool.isRequired,\n  start_date: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.instanceOf(Date)\n  ]),\n  end_date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n  getCurrentMonthData: PropTypes.func.isRequired,\n  ifUserClickedForCurrentMonth: PropTypes.bool.isRequired,\n  clearCurrentMonthSearch: PropTypes.func.isRequired,\n  allDepartmentsForSiblingCommunication: PropTypes.array.isRequired\n};\n\nexport default withStyles(toolbarStyles)(TableToolbarEmployee);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { styles } from \"../commonStyles/ModuleItemListStyles\";\nimport toolbarStyles from \"../commonStyles/toolbarStyles\";\nimport combineStyles from \"../commonStyles/combineStyles\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst rows = [\n  {\n    tableHeaderProp: \"department_name\",\n    disablePadding: true,\n    label: \"Department\"\n  },\n  {\n    tableHeaderProp: \"employee_name\",\n    disablePadding: true,\n    label: \"Employee Name\"\n  },\n  {\n    tableHeaderProp: \"work_description\",\n    disablePadding: true,\n    label: \"Work Description\"\n  },\n  {\n    tableHeaderProp: \"avg_employee_productivity\",\n    disablePadding: false,\n    label: \"Avg. Employee Productivity\"\n  },\n  {\n    tableHeaderProp: \"benchmark_employee_productivity\",\n    disablePadding: false,\n    label: \"Benchmark Employee Productivity\"\n  },\n\n  {\n    tableHeaderProp: \"date\",\n    disablePadding: false,\n    label: \"Date of Employment\"\n  }\n];\n\nclass TableHeadEmployee extends React.Component {\n  state = {\n    arrowRef: null\n  };\n\n  // function to handle the placement of the arrow on top of the Tooltip\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node\n    });\n  };\n\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const {\n      onSelectAllClick,\n      order,\n      orderBy,\n      numSelected,\n      page,\n      rowsPerPage,\n      count,\n      noOfItemsInCurrentPage\n    } = this.props;\n\n    const { classes } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <Tooltip\n            title={\n              <React.Fragment>\n                <h2>\n                  {noOfItemsInCurrentPage > 1\n                    ? `Select all ${noOfItemsInCurrentPage}`\n                    : `Select the item`}\n                </h2>\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n              </React.Fragment>\n            }\n            enterDelay={300}\n            placement={\"top-end\"}\n            classes={{\n              tooltip: classes.bootstrapTooltip,\n              popper: classes.bootstrapPopper,\n              tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n              tooltipPlacementRight: classes.bootstrapPlacementRight,\n              tooltipPlacementTop: classes.bootstrapPlacementTop,\n              tooltipPlacementBottom: classes.bootstrapPlacementBottom\n            }}\n            PopperProps={{\n              popperOptions: {\n                modifiers: {\n                  arrow: {\n                    enabled: Boolean(this.state.arrowRef),\n                    element: this.state.arrowRef\n                  }\n                }\n              }\n            }}\n          >\n            <TableCell padding=\"checkbox\">\n              <Checkbox\n                indeterminate={\n                  page !== Math.max((0, Math.ceil(count / rowsPerPage) - 1))\n                    ? numSelected > 0 && numSelected < rowsPerPage\n                    : numSelected > 0 && numSelected < noOfItemsInCurrentPage\n                }\n                checked={\n                  noOfItemsInCurrentPage === 0\n                    ? false\n                    : page !== Math.max(0, Math.ceil(count / rowsPerPage) - 1)\n                    ? numSelected === rowsPerPage\n                    : noOfItemsInCurrentPage < rowsPerPage\n                    ? numSelected === noOfItemsInCurrentPage\n                    : numSelected === rowsPerPage\n                }\n                onChange={onSelectAllClick}\n              />\n            </TableCell>\n          </Tooltip>\n          {rows.map(\n            row => (\n              <TableCell\n                className={classes.row}\n                key={row.tableHeaderProp}\n                align=\"center\"\n                padding={row.disablePadding ? \"none\" : \"default\"}\n                sortDirection={orderBy === row.tableHeaderProp ? order : false}\n              >\n                <Tooltip\n                  title={\n                    <React.Fragment>\n                      <h2>Sort by {row.label}</h2>\n                      <span\n                        className={classes.arrow}\n                        ref={this.handleArrowRef}\n                      />\n                    </React.Fragment>\n                  }\n                  enterDelay={300}\n                  placement={\"top-end\"}\n                  classes={{\n                    tooltip: classes.bootstrapTooltip,\n                    popper: classes.bootstrapPopper,\n                    tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                    tooltipPlacementRight: classes.bootstrapPlacementRight,\n                    tooltipPlacementTop: classes.bootstrapPlacementTop,\n                    tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                  }}\n                  PopperProps={{\n                    popperOptions: {\n                      modifiers: {\n                        arrow: {\n                          enabled: Boolean(this.state.arrowRef),\n                          element: this.state.arrowRef\n                        }\n                      }\n                    }\n                  }}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.tableHeaderProp}\n                    direction={order}\n                    onClick={this.createSortHandler(row.tableHeaderProp)}\n                  >\n                    {row.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            ),\n            this\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nTableHeadEmployee.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst combinedStyles = combineStyles(styles, toolbarStyles);\n\nexport default withStyles(combinedStyles)(TableHeadEmployee);\n\n/* The expression < Math.max(0, Math.ceil(count / rowsPerPage) - 1) > is the index value of the variable 'page' ONLY when I am on the last page. So the condition //#endregion\n< page === Math.max(0, Math.ceil(count / rowsPerPage) - 1) >  WILL ONLY BE TRUE on the last page.\n\nNote, - The variable 'page' is a built-in prop of TablePagination API (https://material-ui.com/api/table-pagination/) - and the value of 'page' is a zero-based index of the current page.\n */\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5\n  }\n});\n\nclass TablePaginationActions extends React.Component {\n  state = {\n    arrowRef: null\n  };\n\n  // function to handle the placement of the arrow on top of the Tooltip\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node\n    });\n  };\n\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1)\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Tooltip\n          title={\n            <React.Fragment>\n              <h2>First page</h2>\n              <span className={classes.arrow} ref={this.handleArrowRef} />\n            </React.Fragment>\n          }\n          placement=\"bottom-start\"\n          classes={{\n            tooltip: classes.bootstrapTooltip,\n            popper: classes.bootstrapPopper,\n            tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n            tooltipPlacementRight: classes.bootstrapPlacementRight,\n            tooltipPlacementTop: classes.bootstrapPlacementTop,\n            tooltipPlacementBottom: classes.bootstrapPlacementBottom\n          }}\n          PopperProps={{\n            popperOptions: {\n              modifiers: {\n                arrow: {\n                  enabled: Boolean(this.state.arrowRef),\n                  element: this.state.arrowRef\n                }\n              }\n            }\n          }}\n        >\n          <IconButton\n            onClick={this.handleFirstPageButtonClick}\n            disabled={page === 0}\n            aria-label=\"First Page\"\n          >\n            {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n          </IconButton>\n        </Tooltip>\n        <Tooltip\n          title={\n            <React.Fragment>\n              <h2>Previous page</h2>\n              <span className={classes.arrow} ref={this.handleArrowRef} />\n            </React.Fragment>\n          }\n          placement=\"bottom-start\"\n          classes={{\n            tooltip: classes.bootstrapTooltip,\n            popper: classes.bootstrapPopper,\n            tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n            tooltipPlacementRight: classes.bootstrapPlacementRight,\n            tooltipPlacementTop: classes.bootstrapPlacementTop,\n            tooltipPlacementBottom: classes.bootstrapPlacementBottom\n          }}\n          PopperProps={{\n            popperOptions: {\n              modifiers: {\n                arrow: {\n                  enabled: Boolean(this.state.arrowRef),\n                  element: this.state.arrowRef\n                }\n              }\n            }\n          }}\n        >\n          <IconButton\n            onClick={this.handleBackButtonClick}\n            disabled={page === 0}\n            aria-label=\"Previous Page\"\n          >\n            {theme.direction === \"rtl\" ? (\n              <KeyboardArrowRight />\n            ) : (\n              <KeyboardArrowLeft />\n            )}\n          </IconButton>\n        </Tooltip>\n        <Tooltip\n          title={\n            <React.Fragment>\n              <h2>Next page</h2>\n              <span className={classes.arrow} ref={this.handleArrowRef} />\n            </React.Fragment>\n          }\n          placement=\"bottom-start\"\n          classes={{\n            tooltip: classes.bootstrapTooltip,\n            popper: classes.bootstrapPopper,\n            tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n            tooltipPlacementRight: classes.bootstrapPlacementRight,\n            tooltipPlacementTop: classes.bootstrapPlacementTop,\n            tooltipPlacementBottom: classes.bootstrapPlacementBottom\n          }}\n          PopperProps={{\n            popperOptions: {\n              modifiers: {\n                arrow: {\n                  enabled: Boolean(this.state.arrowRef),\n                  element: this.state.arrowRef\n                }\n              }\n            }\n          }}\n        >\n          <IconButton\n            onClick={this.handleNextButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"Next Page\"\n          >\n            {theme.direction === \"rtl\" ? (\n              <KeyboardArrowLeft />\n            ) : (\n              <KeyboardArrowRight />\n            )}\n          </IconButton>\n        </Tooltip>\n        <Tooltip\n          title={\n            <React.Fragment>\n              <h2>Last page</h2>\n              <span className={classes.arrow} ref={this.handleArrowRef} />\n            </React.Fragment>\n          }\n          placement=\"bottom-start\"\n          classes={{\n            tooltip: classes.bootstrapTooltip,\n            popper: classes.bootstrapPopper,\n            tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n            tooltipPlacementRight: classes.bootstrapPlacementRight,\n            tooltipPlacementTop: classes.bootstrapPlacementTop,\n            tooltipPlacementBottom: classes.bootstrapPlacementBottom\n          }}\n          PopperProps={{\n            popperOptions: {\n              modifiers: {\n                arrow: {\n                  enabled: Boolean(this.state.arrowRef),\n                  element: this.state.arrowRef\n                }\n              }\n            }\n          }}\n        >\n          <IconButton\n            onClick={this.handleLastPageButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"Last Page\"\n          >\n            {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n          </IconButton>\n        </Tooltip>\n      </div>\n    );\n  }\n}\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\n// Make an HOC from the above TablePaginationActions component which will be exported and used in DevelopmentList.js\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, {\n  withTheme: true\n})(TablePaginationActions);\n\nexport default TablePaginationActionsWrapped;\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport \"../UtilFunctions/confirmDelete.css\";\nimport \"../UtilFunctions/snackbar.css\";\nimport { showDeleteSnackbar } from \"../UtilFunctions/showEmptyFieldAndDeleteSnackbar\";\nimport { withStyles } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport axios from \"axios\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { styles } from \"../commonStyles/ModuleItemListStyles\";\nimport toolbarStyles from \"../commonStyles/toolbarStyles\";\nimport combineStyles from \"../commonStyles/combineStyles\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AddNewEmployee from \"./AddNewEmployee\";\nimport TableToolbarEmployee from \"./TableToolbarEmployees\";\nimport TableHeadEmployee from \"./TableHeadEmployees\";\nimport orderByLodash from \"lodash/orderBy\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePaginationActionsWrapped from \"../UtilFunctions/TablePaginationActionsWrapped\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Helmet } from \"react-helmet\";\nconst tableSortByHeadingUtilFunc = require(\"../UtilFunctions/tableSortByHeading\");\nconst moment = require(\"moment\");\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    background: \"#66CCFF\",\n    color: theme.palette.common.white,\n    align: \"left\"\n  },\n  body: {\n    fontSize: 14,\n    align: \"left\"\n  }\n}))(TableCell);\n\nclass EmployeeList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalItemsUnformatted: [],\n      totalItemsFormatted: [],\n      order: \"desc\",\n      orderBy: \"date\",\n      selected: [],\n      page: 0,\n      rowsPerPage: 5,\n      queryStringFromChild: \"\",\n      columnToQuery: \"department_name\",\n      itemsDateRangePaginated: [],\n      totalDateRangeSearchResultParent: [],\n      start_date: new Date(),\n      end_date: new Date(),\n      ifUserSearchedDateRange: false,\n      ifUserClickedForCurrentMonth: false,\n      currentMonthPaginated: [],\n      currentMonthTotal: [],\n      currentDatePaginated: [],\n      currentDateTotal: [],\n      arrowRef: null\n    };\n  }\n\n  // function to handle the placement of the arrow on top of the Tooltip\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node\n    });\n  };\n\n  addItem = item => {\n    this.setState({\n      totalItemsFormatted: [item, ...this.state.totalItemsFormatted],\n      currentDateTotal: [item, ...this.state.currentDateTotal],\n      currentMonthTotal: [item, ...this.state.currentMonthTotal]\n    });\n  };\n\n  returnDocumentToEdit = id => {\n    if (this.state.selected.length !== 0) {\n      return this.state.totalItemsFormatted.filter(item => item._id === id);\n    }\n  };\n\n  editItem = () => {\n    // I need to apply this 'ifUserSearchedDateRange' and 'ifUserClickedForCurrentMonth' check to re-render the Table with the updated data.\n    if (this.state.ifUserSearchedDateRange) {\n      const { start_date, end_date } = this.state;\n      this.setState({ page: this.state.page }, () => {\n        axios\n          .post(\n            \"/api/employee/paginate/daterange\",\n            {\n              start_date,\n              end_date\n            },\n            {\n              params: {\n                page: this.state.page,\n                rowsperpage: this.state.rowsPerPage\n              }\n            }\n          )\n          .then(res => {\n            this.setState({\n              itemsDateRangePaginated: res.data\n            });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      });\n    } else if (this.state.ifUserClickedForCurrentMonth) {\n      this.setState({ page: this.state.page }, () => {\n        axios\n          .post(\n            `/api/employee/paginate/currentmonth`,\n            {},\n            {\n              params: {\n                page: this.state.page,\n                rowsperpage: this.state.rowsPerPage\n              }\n            }\n          )\n          .then(res => {\n            this.setState(\n              {\n                currentMonthPaginated: res.data\n              },\n              () => {\n                this.setState({\n                  ifUserClickedForCurrentMonth: true\n                });\n              }\n            );\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      });\n    } else {\n      // having to put this extra if condition ((this.state.currentDatePaginated.length === 1)) and the database call here to resolve an issue - that for the last item left in the table, after edit submission the date and work-description was not getting rendered immediately. Edited data will get rendered only after page refresh\n      if (this.state.currentDatePaginated.length === 1) {\n        axios\n          .post(\n            \"/api/employee/paginate/current/today\",\n            {},\n            {\n              params: {\n                page: this.state.page,\n                rowsperpage: this.state.rowsPerPage\n              }\n            }\n          )\n          .then(res => {\n            this.setState({\n              currentDatePaginated: res.data\n            });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      } else {\n        this.setState({\n          currentDatePaginated: [this.state.currentDatePaginated],\n          totalDateRangeSearchResultParent: [\n            this.state.totalDateRangeSearchResultParent\n          ]\n        });\n      }\n    }\n  };\n\n  confirmDeleteCustom = idArr => {\n    let payload = {\n      employee_id_list_arr: idArr\n    };\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className=\"custom-ui\">\n            <h1>Are you sure ?</h1>\n            <p>You want to delete this Employee Record</p>\n            <button onClick={onClose}>No</button>\n            <button\n              onClick={() => {\n                if (this.state.ifUserSearchedDateRange) {\n                  const { start_date, end_date } = this.state;\n                  axios\n                    .delete(\"/api/employee/delete\", {\n                      data: payload\n                    })\n                    .then(() => {\n                      axios\n                        .post(\n                          \"/api/employee/paginate/daterange\",\n                          {\n                            start_date,\n                            end_date\n                          },\n                          {\n                            params: {\n                              page: this.state.page,\n                              rowsperpage: this.state.rowsPerPage\n                            }\n                          }\n                        )\n                        .then(res => {\n                          this.setState({\n                            itemsDateRangePaginated: res.data,\n                            selected: []\n                          });\n                        })\n                        .then(() => {\n                          showDeleteSnackbar();\n                          onClose();\n                        })\n                        .catch(error => {\n                          if (error.response.status === 401) {\n                            this.props.history.push(\"/login\");\n                            alert(\"Please Login, session expired\");\n                            onClose();\n                          } else {\n                            alert(\n                              \"Oops something wrong happened while deleting, please try again\"\n                            );\n                          }\n                        });\n                    });\n                } else if (this.state.ifUserClickedForCurrentMonth) {\n                  this.setState({ page: this.state.page }, () => {\n                    axios\n                      .delete(\"/api/employee/delete\", {\n                        data: payload\n                      })\n                      .then(() => {\n                        axios\n                          .post(\n                            `/api/employee/paginate/currentmonth`,\n                            {},\n                            {\n                              params: {\n                                page: this.state.page,\n                                rowsperpage: this.state.rowsPerPage\n                              }\n                            }\n                          )\n                          .then(res => {\n                            this.setState({\n                              currentMonthPaginated: res.data,\n                              selected: []\n                            });\n                          })\n                          .then(() => {\n                            showDeleteSnackbar();\n                            onClose();\n                          })\n                          .catch(error => {\n                            if (error.response.status === 401) {\n                              this.props.history.push(\"/login\");\n                              alert(\"Please Login, session expired\");\n                              onClose();\n                            } else {\n                              alert(\n                                \"Oops something wrong happened while deleting, please try again\"\n                              );\n                            }\n                          });\n                      });\n                  });\n                } else {\n                  axios\n                    .delete(\"/api/employee/delete\", {\n                      data: payload\n                    })\n                    .then(() => {\n                      this.setState({\n                        currentDatePaginated: [this.state.currentDatePaginated],\n                        selected: []\n                      });\n                    })\n                    .then(() => {\n                      showDeleteSnackbar();\n                      onClose();\n                    })\n                    .catch(error => {\n                      if (error.response.status === 401) {\n                        this.props.history.push(\"/login\");\n                        alert(\"Please Login, session expired\");\n                        onClose();\n                      } else {\n                        alert(\n                          \"Oops something wrong happened while deleting, please try again\"\n                        );\n                      }\n                    });\n                }\n              }}\n            >\n              Yes, Delete it!\n            </button>\n          </div>\n        );\n      }\n    });\n  };\n\n  // Function to handle the request from user to sort by a particular heading.\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = \"desc\";\n\n    if (this.state.orderBy === property && this.state.order === \"desc\") {\n      order = \"asc\";\n    }\n    // In below I am setting the state with destructuring, given both key-value is the same word. So in setState, I just mention the key from the state variable.\n    this.setState({ order, orderBy });\n  };\n\n  // Function to return true if an item is selected or false if NOT\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  // Function to handle when the checkbox for the select all is clicked to select all the items in that page\n  handleSelectAllClick = event => {\n    if (event.target.checked) {\n      if (\n        this.state.ifUserSearchedDateRange === false &&\n        this.state.ifUserClickedForCurrentMonth === false &&\n        this.state.queryStringFromChild === \"\"\n      ) {\n        this.setState(state => ({\n          selected: state.currentDatePaginated.map(n => n._id)\n        }));\n        return;\n      } else if (this.state.queryStringFromChild !== \"\") {\n        const lowerCaseQuery = this.state.queryStringFromChild.toLowerCase();\n\n        const totalTextQueryResult = this.state.totalItemsFormatted.filter(\n          item => {\n            return (\n              item[this.state.columnToQuery] &&\n              item[this.state.columnToQuery]\n                .toLowerCase()\n                .includes(lowerCaseQuery)\n            );\n          }\n        );\n        const itemsToRenderInThisPage = totalTextQueryResult.slice(\n          this.state.page * this.state.rowsPerPage,\n          this.state.page * this.state.rowsPerPage + this.state.rowsPerPage\n        );\n        this.setState(state => ({\n          selected: itemsToRenderInThisPage.map(n => n._id)\n        }));\n        return;\n      } else if (this.state.ifUserClickedForCurrentMonth === true) {\n        this.setState(state => ({\n          selected: state.currentMonthPaginated.map(n => n._id)\n        }));\n        return;\n      } else {\n        this.setState(state => ({\n          selected: state.itemsDateRangePaginated.map(n => n._id)\n        }));\n        return;\n      }\n    }\n    this.setState({ selected: [] });\n  };\n\n  unSelectItems = () => {\n    this.setState({\n      selected: []\n    });\n  };\n\n  // Function to add item's _id to the 'selected' array when I click on them and make them checked\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      // If its a new item that has been selected, then concat it to the old array of selections\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    this.setState({ selected: newSelected });\n  };\n\n  componentDidMount() {\n    axios\n      .all([\n        axios.get(`/api/employee/current/today`),\n        axios.post(`/api/employee/paginate/current/today`, {\n          params: {\n            page: this.state.page,\n            rowsperpage: this.state.rowsPerPage\n          }\n        })\n      ])\n      .then(\n        axios.spread((getTotalCurrentDateData, getCurrentDatePaginated) => {\n          this.setState({\n            currentDateTotal: getTotalCurrentDateData.data,\n            currentDatePaginated: getCurrentDatePaginated.data\n          });\n        })\n      )\n      .then(\n        axios.get(\"/api/employee/\").then(res => {\n          this.setState(\n            {\n              totalItemsUnformatted: res.data\n            },\n            () => {\n              this.setState({\n                totalItemsFormatted: this.state.totalItemsUnformatted.map(\n                  item => {\n                    if (item.date) {\n                      item = {\n                        ...item,\n                        date:\n                          moment(item.date).format(\"MMM D, YYYY 12:00:00 \") +\n                          `AM`\n                      };\n                    }\n                    return item;\n                  }\n                )\n              });\n            }\n          );\n        })\n      )\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.state.itemsDateRangePaginated.length !==\n        prevState.itemsDateRangePaginated.length ||\n      this.state.totalDateRangeSearchResultParent.length !==\n        prevState.totalDateRangeSearchResultParent.length ||\n      this.state.totalItemsFormatted.length !==\n        prevState.totalItemsFormatted.length ||\n      this.state.rowsPerPage !== prevState.rowsPerPage ||\n      this.state.currentDateTotal.length !==\n        prevState.currentDateTotal.length ||\n      this.state.selected !== prevState.selected\n    ) {\n      if (this.state.ifUserSearchedDateRange) {\n        const { start_date, end_date } = this.state;\n        this.setState({ page: this.state.page }, () => {\n          axios\n            .post(\n              \"/api/employee/paginate/daterange\",\n              {\n                start_date,\n                end_date\n              },\n              {\n                params: {\n                  page: this.state.page,\n                  rowsperpage: this.state.rowsPerPage\n                }\n              }\n            )\n            .then(res => {\n              this.setState({\n                itemsDateRangePaginated: res.data\n              });\n            })\n            .catch(error => {\n              console.log(error);\n            });\n        });\n      } else if (this.state.ifUserClickedForCurrentMonth) {\n        this.setState({ page: this.state.page }, () => {\n          axios\n            .post(\n              `/api/employee/paginate/currentmonth`,\n              {},\n              {\n                params: {\n                  page: this.state.page,\n                  rowsperpage: this.state.rowsPerPage\n                }\n              }\n            )\n            .then(res => {\n              this.setState(\n                {\n                  currentMonthPaginated: res.data\n                },\n                () => {\n                  this.setState({\n                    ifUserClickedForCurrentMonth: true\n                  });\n                }\n              );\n            })\n            .catch(error => {\n              console.log(error);\n            });\n        });\n      } else {\n        this.setState({ page: this.state.page }, () => {\n          axios\n            .all([\n              axios.get(`/api/employee/current/today`),\n              axios.post(\n                `/api/employee/paginate/current/today`,\n                {},\n                {\n                  params: {\n                    page: this.state.page,\n                    rowsperpage: this.state.rowsPerPage\n                  }\n                }\n              )\n            ])\n            .then(\n              axios.spread(\n                (getTotalCurrentDateData, getCurrentDatePaginated) => {\n                  this.setState({\n                    currentDateTotal: getTotalCurrentDateData.data,\n                    currentDatePaginated: getCurrentDatePaginated.data\n                  });\n                }\n              )\n            )\n            .then(\n              axios.get(\"/api/employee/\").then(res => {\n                this.setState(\n                  {\n                    totalItemsUnformatted: res.data\n                  },\n                  () => {\n                    this.setState({\n                      totalItemsFormatted: this.state.totalItemsUnformatted.map(\n                        item => {\n                          if (item.date) {\n                            item = {\n                              ...item,\n                              date:\n                                moment(item.date).format(\n                                  \"MMM D, YYYY 12:00:00 \"\n                                ) + `AM`\n                            };\n                          }\n                          return item;\n                        }\n                      )\n                    });\n                  }\n                );\n              })\n            )\n            .catch(error => {\n              console.log(error);\n            });\n        });\n      }\n    }\n  }\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleQueryString = queryTypedInChild => {\n    this.setState({\n      queryStringFromChild: queryTypedInChild\n    });\n  };\n\n  handleColumnToQuery = columnToQueryInChild => {\n    this.setState({\n      columnToQuery: columnToQueryInChild\n    });\n  };\n\n  clearAllQueryString = () => {\n    this.setState({\n      queryStringFromChild: \"\",\n      columnToQuery: \"department_name\"\n    });\n  };\n\n  clearCurrentMonthSearch = () => {\n    this.setState({\n      ifUserClickedForCurrentMonth: false\n    });\n  };\n\n  clearUserSearchedDateRange = () => {\n    this.setState({\n      ifUserSearchedDateRange: false\n    });\n  };\n\n  handleStartDateChangeParent = startdate => {\n    this.setState({\n      start_date: startdate\n    });\n  };\n\n  handleEndDateChangeParent = enddate => {\n    this.setState({\n      end_date: enddate\n    });\n  };\n\n  // Function that will fire when clicked on current month data button\n  getCurrentMonthData = () => {\n    this.setState(\n      {\n        page: 0\n      },\n      () => {\n        axios\n          .all([\n            axios.post(`/api/employee/currentmonth`),\n            axios.post(`/api/employee/paginate/currentmonth`, {\n              params: {\n                page: this.state.page,\n                rowsperpage: this.state.rowsPerPage\n              }\n            })\n          ])\n          .then(\n            axios.spread(\n              (getTotalCurrentMonthData, getCurrentMonthPaginated) => {\n                this.setState(\n                  {\n                    currentMonthTotal: getTotalCurrentMonthData.data,\n                    currentMonthPaginated: getCurrentMonthPaginated.data\n                  },\n                  () => {\n                    this.setState({\n                      ifUserClickedForCurrentMonth: true\n                    });\n                  }\n                );\n              }\n            )\n          );\n      }\n    );\n  };\n\n  // Function to handle when next page is clicked in the Pagination Component\n  handleChangePage = (event, page) => {\n    const {\n      start_date,\n      end_date,\n      ifUserSearchedDateRange,\n      ifUserClickedForCurrentMonth\n    } = this.state;\n\n    // If user has run a query for daterange, then only render the next page of that query result\n    if (ifUserSearchedDateRange) {\n      this.setState({ page }, () => {\n        axios\n          .post(\n            \"/api/employee/paginate/daterange\",\n            {\n              start_date,\n              end_date\n            },\n            {\n              params: {\n                page: this.state.page,\n                rowsperpage: this.state.rowsPerPage\n              }\n            }\n          )\n          .then(res => {\n            this.setState({\n              itemsDateRangePaginated: res.data\n            });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      });\n    } else if (ifUserClickedForCurrentMonth) {\n      this.setState({ page }, () => {\n        axios\n          .post(\n            `/api/employee/paginate/currentmonth`,\n            {},\n            {\n              params: {\n                page: this.state.page,\n                rowsperpage: this.state.rowsPerPage\n              }\n            }\n          )\n          .then(res => {\n            this.setState({\n              currentMonthPaginated: res.data\n            });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      });\n    } else {\n      this.setState({ page }, () => {\n        axios\n          .post(\n            `/api/employee/paginate/current/today`,\n            {},\n            {\n              params: {\n                page: this.state.page,\n                rowsperpage: this.state.rowsPerPage\n              }\n            }\n          )\n          .then(res => {\n            this.setState({\n              currentDatePaginated: res.data\n            });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      });\n    }\n  };\n\n  ifUserWantsDateRangeData = (\n    dateRangeArrToRenderInCurrentPage,\n    fullDateRangeSearchResult\n  ) => {\n    this.setState({\n      itemsDateRangePaginated: [...dateRangeArrToRenderInCurrentPage],\n      totalDateRangeSearchResultParent: [...fullDateRangeSearchResult],\n      ifUserSearchedDateRange: true\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      order,\n      orderBy,\n      selected,\n      rowsPerPage,\n      page,\n      itemsDateRangePaginated,\n      totalDateRangeSearchResultParent,\n      totalItemsFormatted,\n      queryStringFromChild,\n      start_date,\n      end_date,\n      ifUserSearchedDateRange,\n      currentMonthTotal,\n      currentMonthPaginated,\n      ifUserClickedForCurrentMonth,\n      currentDatePaginated,\n      currentDateTotal\n    } = this.state;\n\n    // lowercase the queryStringFromChild string that the user types\n    const lowerCaseQuery =\n      typeof queryStringFromChild == \"string\"\n        ? queryStringFromChild && queryStringFromChild.toLowerCase()\n        : typeof queryStringFromChild == \"number\"\n        ? queryStringFromChild\n        : null;\n\n    const totalTextQueryResult =\n      lowerCaseQuery !== \"\"\n        ? totalItemsFormatted.filter(\n            item =>\n              item[this.state.columnToQuery] &&\n              item[this.state.columnToQuery]\n                .toLowerCase()\n                .includes(lowerCaseQuery)\n          )\n        : null;\n\n    // Conditionally set the list of items that will be actually be of interest for rendering. e.g. If 'itemsDateRangePaginated' OR 'queryStringFromChild' OR 'ifUserClickedForCurrentMonth' is not set by user then render currentDatePaginated list of items. Else only render the items that the user wants.\n    const itemsToRenderInThisPage = !ifUserClickedForCurrentMonth\n      ? !ifUserSearchedDateRange\n        ? orderByLodash(\n            queryStringFromChild\n              ? totalTextQueryResult.slice(\n                  page * rowsPerPage,\n                  page * rowsPerPage + rowsPerPage\n                )\n              : currentDatePaginated\n          )\n        : itemsDateRangePaginated\n      : currentMonthPaginated;\n\n    const itemToEdit = this.returnDocumentToEdit(this.state.selected[0]);\n\n    // filter the whole database returning only the selected items\n    const downloadSelectedItems = totalItemsFormatted.filter(item => {\n      return selected.indexOf(item._id) !== -1;\n    });\n\n    const emptyRows =\n      rowsPerPage -\n      Math.min(\n        rowsPerPage,\n        itemsToRenderInThisPage.length - page * rowsPerPage\n      );\n\n    // in below the whole table header is a different component 'TableHeadEmployee'\n    return (\n      <MuiThemeProvider>\n        <div>\n          <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>MyCompany | Employee!</title>\n            <meta name=\"description\" content=\"MyCompany | Employee!\" />\n            <meta name=\"theme-color\" content=\"#008f68\" />\n            <body class=\"dark\" />\n          </Helmet>\n          <Row>\n            <Col xs=\"12\">\n              {console.log(\"SELECTED IS \", selected)}\n              <Paper className={classes.root}>\n                <TableToolbarEmployee\n                  totalItemsFormatted={this.state.totalItemsFormatted}\n                  numSelected={selected.length}\n                  confirmDeleteCustom={this.confirmDeleteCustom}\n                  checkedItems={selected}\n                  itemToEdit={itemToEdit}\n                  editItem={this.editItem}\n                  handleQueryString={this.handleQueryString}\n                  handleColumnToQuery={this.handleColumnToQuery}\n                  clearAllQueryString={this.clearAllQueryString}\n                  ifUserWantsDateRangeData={this.ifUserWantsDateRangeData}\n                  unSelectItems={this.unSelectItems}\n                  downloadSelectedItems={downloadSelectedItems}\n                  clearUserSearchedDateRange={this.clearUserSearchedDateRange}\n                  page={this.state.page}\n                  rowsPerPage={this.state.rowsPerPage}\n                  handleStartDateChangeParent={this.handleStartDateChangeParent}\n                  handleEndDateChangeParent={this.handleEndDateChangeParent}\n                  ifUserSearchedDateRange={ifUserSearchedDateRange}\n                  start_date={start_date}\n                  end_date={end_date}\n                  getCurrentMonthData={this.getCurrentMonthData}\n                  ifUserClickedForCurrentMonth={ifUserClickedForCurrentMonth}\n                  clearCurrentMonthSearch={this.clearCurrentMonthSearch}\n                  allDepartmentsForSiblingCommunication={\n                    this.props.allDepartmentsForSiblingCommunication\n                  }\n                />\n                <div className={classes.tableWrapper}>\n                  <Table className={classes.table}>\n                    <TableHeadEmployee\n                      numSelected={selected.length}\n                      order={order}\n                      orderBy={orderBy}\n                      onSelectAllClick={this.handleSelectAllClick}\n                      onRequestSort={this.handleRequestSort}\n                      page={page}\n                      count={\n                        queryStringFromChild\n                          ? totalTextQueryResult.length\n                          : ifUserSearchedDateRange\n                          ? totalDateRangeSearchResultParent.length\n                          : ifUserClickedForCurrentMonth\n                          ? currentMonthTotal.length\n                          : currentDateTotal.length\n                      }\n                      rowsPerPage={parseInt(rowsPerPage)}\n                      noOfItemsInCurrentPage={itemsToRenderInThisPage.length}\n                    />\n                    <TableBody>\n                      {tableSortByHeadingUtilFunc\n                        .stableSort(\n                          itemsToRenderInThisPage,\n                          tableSortByHeadingUtilFunc.getSorting(order, orderBy)\n                        )\n                        .map(n => {\n                          const isSelected = this.isSelected(n._id);\n                          return (\n                            <TableRow\n                              hover\n                              onClick={event => this.handleClick(event, n._id)}\n                              role=\"checkbox\"\n                              aria-checked={isSelected}\n                              tabIndex={-1}\n                              key={n._id || n.id}\n                              selected={isSelected}\n                              style={{\n                                height: \"35px\"\n                              }}\n                            >\n                              <CustomTableCell\n                                padding=\"checkbox\"\n                                style={{\n                                  width: \"10px\"\n                                }}\n                              >\n                                <Checkbox checked={isSelected} />\n                              </CustomTableCell>\n                              <CustomTableCell\n                                className={classes.customTableCell}\n                                align=\"center\"\n                                style={{\n                                  width: \"15%\"\n                                }}\n                              >\n                                {n.department_name}\n                              </CustomTableCell>\n                              <CustomTableCell\n                                className={classes.customTableCell}\n                                align=\"center\"\n                                style={{\n                                  width: \"15%\"\n                                }}\n                              >\n                                {n.employee_name}\n                              </CustomTableCell>\n                              <CustomTableCell\n                                className={classes.customTableCell}\n                                align=\"center\"\n                                style={{\n                                  width: \"30%\"\n                                }}\n                              >\n                                {n.work_description}\n                              </CustomTableCell>\n                              <CustomTableCell\n                                className={classes.customTableCell}\n                                align=\"center\"\n                                style={{\n                                  width: \"20%\"\n                                }}\n                              >\n                                {n.avg_employee_productivity}\n                              </CustomTableCell>\n                              <CustomTableCell\n                                className={classes.customTableCell}\n                                align=\"center\"\n                                style={{\n                                  width: \"15%\"\n                                }}\n                              >\n                                {n.benchmark_employee_productivity}\n                              </CustomTableCell>\n                              <CustomTableCell\n                                className={classes.customTableCell}\n                                align=\"center\"\n                                style={{\n                                  width: \"15%\"\n                                }}\n                              >\n                                {moment(n.date).format(\"MMM D, YYYY 12:00:00 \")}{\" \"}\n                                {`AM`}\n                              </CustomTableCell>\n                            </TableRow>\n                          );\n                        })}\n                      {emptyRows > 0 && (\n                        <TableRow style={{ height: 0 * emptyRows }}>\n                          <CustomTableCell colSpan={6} />\n                        </TableRow>\n                      )}\n                    </TableBody>\n                    <TableFooter>\n                      <TableRow>\n                        <TablePagination\n                          rowsPerPageOptions={[5, 10, 25]}\n                          colSpan={6}\n                          count={\n                            queryStringFromChild\n                              ? totalTextQueryResult.length\n                              : ifUserSearchedDateRange\n                              ? totalDateRangeSearchResultParent.length\n                              : ifUserClickedForCurrentMonth\n                              ? currentMonthTotal.length\n                              : currentDateTotal.length\n                          }\n                          rowsPerPage={parseInt(rowsPerPage)}\n                          page={page}\n                          SelectProps={{\n                            native: true\n                          }}\n                          onChangePage={this.handleChangePage}\n                          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                          ActionsComponent={TablePaginationActionsWrapped}\n                        />\n                      </TableRow>\n                    </TableFooter>\n                  </Table>\n                </div>\n                <div id=\"snackbar\">\n                  The Employee Record you selected has been successfully deleted\n                </div>\n              </Paper>\n            </Col>\n          </Row>\n          <Row>\n            <br />\n          </Row>\n\n          <div className=\"float-sm-right m-b-sm\">\n            <Tooltip\n              title={\n                <React.Fragment>\n                  <h2>Add a new Employee Record</h2>\n                  <span className={classes.arrow} ref={this.handleArrowRef} />\n                </React.Fragment>\n              }\n              placement=\"top-end\"\n              classes={{\n                tooltip: classes.bootstrapTooltip,\n                popper: classes.bootstrapPopper,\n                tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                tooltipPlacementRight: classes.bootstrapPlacementRight,\n                tooltipPlacementTop: classes.bootstrapPlacementTop,\n                tooltipPlacementBottom: classes.bootstrapPlacementBottom\n              }}\n              PopperProps={{\n                popperOptions: {\n                  modifiers: {\n                    arrow: {\n                      enabled: Boolean(this.state.arrowRef),\n                      element: this.state.arrowRef\n                    }\n                  }\n                }\n              }}\n            >\n              <IconButton\n                aria-label=\"Filter list\"\n                className={classes.fabButton}\n              >\n                <AddNewEmployee\n                  addNewItemToParentState={this.addItem}\n                  allDepartmentsForSiblingCommunication={\n                    this.props.allDepartmentsForSiblingCommunication\n                  }\n                />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nEmployeeList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n// Use the utililty function combineStyles() to create a compatible function for `withStyles`:\nconst combinedStyles = combineStyles(styles, toolbarStyles);\n\nexport default withStyles(combinedStyles)(EmployeeList);\n\n/*\n1> FAB - https://material-ui.com/demos/buttons/#floating-action-buttons\n\n2> For rendering the newly added item, I am updating the parent's state by passing date from Child to parent.\nA> Define a callback in my parent (addItem function) which takes the data I need in as a parameter.\n\nB> Pass that callback as a prop to the child\n<AddNewEmployee addNewItemToParentState={this.addItem} />\n\nC> Call the callback using this.props.[callback] in the child, and pass in the data as the argument.\n\n3> I needed the componentDidUpdate, as without it this component will not update the state properly. So without componentDidUpdate() after I add a new item, that will render at the top of the list first and also, clicking immediately on the Delete button on that newly added item will FAIL.\n\n4> The state property \"totalItemsFormatted\" is ONLY required for the searching by a text/string functionality. That is, the user will type the 'Date of Commencement' and 'Date of Completion' in exactly the format that its showing in the rendered Table in the page.\n\n5> Why I needed the the state 'totalItemsUnformatted' and 'totalItemsFormatted' -\n\nBECAUSE without 'totalItemsUnformatted' previously, I WAS MUTATING THE STATE DIRECTLY IN THE BELOW LINE (in both componentDidMount and componentDidUpdate)\n\nthis.state.totalItemsFormatted[index].date =\n                        moment(item.date).format(\"MMM D, YYYY 12:00:00 \") +\n                        `AM`;\n\nIn the above, I am directly changing the property of 'date' in the state named 'totalItemsFormatted'\n\nFor more read - https://medium.freecodecamp.org/handling-state-in-react-four-immutable-approaches-to-consider-d1f5c00249d5\n*/\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MySnackbarContent from \"../../UtilFunctions/MySnackbarContent\";\nimport { withStyles } from \"@material-ui/core\";\nimport { styles } from \"../../commonStyles/AddNewItemStyles\";\nimport PropTypes from \"prop-types\";\n\nclass EmptyFieldSnackBar extends Component {\n  state = {\n    vertical: \"top\",\n    horizontal: \"center\"\n  };\n\n  render() {\n    const {\n      classes,\n      closeEmptyFieldSnackbar,\n      openEmptyTextFieldSnackbar\n    } = this.props;\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        open={openEmptyTextFieldSnackbar}\n        autoHideDuration={4000}\n        onClose={closeEmptyFieldSnackbar}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n      >\n        <MySnackbarContent\n          onClose={closeEmptyFieldSnackbar}\n          variant=\"warning\"\n          className={classes.margin}\n          message=\"Please Fill all the required fields !\"\n        />\n      </Snackbar>\n    );\n  }\n}\n\nEmptyFieldSnackBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EmptyFieldSnackBar);\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MySnackbarContent from \"../../UtilFunctions/MySnackbarContent\";\nimport { withStyles } from \"@material-ui/core\";\nimport { styles } from \"../../commonStyles/AddNewItemStyles\";\nimport PropTypes from \"prop-types\";\n\nclass NewItemAddedConfirmSnackbar extends Component {\n  state = {\n    vertical: \"top\",\n    horizontal: \"center\"\n  };\n\n  render() {\n    const {\n      classes,\n      openNewItemAddedConfirmSnackbar,\n      closeNewItemConfirmSnackbar\n    } = this.props;\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        open={openNewItemAddedConfirmSnackbar}\n        autoHideDuration={3000}\n        onClose={closeNewItemConfirmSnackbar}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        style={{ marginTop: \"35px\" }}\n      >\n        <MySnackbarContent\n          onClose={closeNewItemConfirmSnackbar}\n          variant=\"success\"\n          className={classes.margin}\n          message=\"New Department has been saved successfully\"\n        />\n      </Snackbar>\n    );\n  }\n}\n\nNewItemAddedConfirmSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NewItemAddedConfirmSnackbar);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport history from \"../../history\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { withStyles } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { styles } from \"../commonStyles/AddNewItemStyles\";\nimport theme from \"../commonStyles/AddNewItemThemes\";\nimport EmptyFieldSnackBar from \"./Snackbars/EmptyFieldSnackBar\";\nimport NewItemAddedConfirmSnackbar from \"./Snackbars/NewItemAddedConfirmSnackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n\nclass AddNewDepartment extends Component {\n  state = {\n    open: false,\n    openNewItemAddedConfirmSnackbar: false,\n    openEmptyTextFieldSnackbar: false,\n    vertical: \"top\",\n    horizontal: \"center\",\n    name: \"\",\n    type: \"\"\n  };\n\n  handleToggle = () => {\n    this.setState({\n      open: !this.state.open\n    });\n  };\n\n  handleFabOpen = () => {\n    this.setState({ open: true });\n  };\n\n  closeNewItemConfirmSnackbar = () => {\n    this.setState({ openNewItemAddedConfirmSnackbar: false });\n  };\n\n  closeEmptyFieldSnackbar = () => {\n    this.setState({ openEmptyTextFieldSnackbar: false });\n  };\n\n  onChange = e => {\n    const state = this.state;\n    state[e.target.name] = e.target.value;\n    this.setState(state);\n  };\n\n  handleFormSubmit = () => {\n    const { addNewItemToParentState } = this.props;\n    const { name, type } = this.state;\n    if (name !== \"\" && type !== \"\") {\n      axios\n        .post(\"/api/department/\", {\n          name,\n          type\n        })\n        .then(() => {\n          addNewItemToParentState({\n            name,\n            type\n          });\n          this.setState(\n            {\n              open: false,\n              openNewItemAddedConfirmSnackbar: true,\n              vertical: \"top\",\n              horizontal: \"center\"\n            },\n            () => {\n              history.push(\"/department\");\n            }\n          );\n        })\n        .catch(error => {\n          console.log(\"THE ERROR RESPONSE IS \", error.response);\n          if (\n            error.response &&\n            error.response.data.name === \"MongoError\" &&\n            (error.response && error.response.data.code === 11000)\n          ) {\n            alert(\n              \"Duplicate Department Name! please select another name for the Department\"\n            );\n          } else {\n            alert(\n              \"Ooops something wrong happened while adding new item, please try again\"\n            );\n          }\n        });\n    } else {\n      this.setState({ openEmptyTextFieldSnackbar: true });\n    }\n  };\n\n  handleCancel = () => {\n    this.setState({ open: false });\n  };\n\n  handleEnterEscapeKeyPress = e => {\n    if (e.key === \"Enter\") {\n      this.handleFormSubmit();\n    } else if (e.key === \"Escape\") {\n      this.handleCancel();\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { name, type } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div>\n          <Fab\n            onClick={this.handleFabOpen}\n            aria-pressed=\"true\"\n            color=\"secondary\"\n            size=\"large\"\n            aria-label=\"Add\"\n            fontSize=\"large\"\n          >\n            <AddIcon className={styles.largeIcon} />\n          </Fab>\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleToggle}\n            aria-labelledby=\"form-dialog-title\"\n            fullWidth={true}\n            maxWidth={\"sm\"}\n            variant=\"contained\"\n            PaperProps={{\n              classes: {\n                root: classes.paper\n              }\n            }}\n            onKeyDown={this.handleEnterEscapeKeyPress}\n          >\n            <DialogTitle\n              id=\"form-dialog-title\"\n              className={this.props.classes.styledHeader}\n              disableTypography\n              style={{ height: \"60px\", paddingTop: \"10px\" }}\n            >\n              New Department\n              <IconButton\n                onClick={this.handleToggle}\n                style={{ float: \"right\", marginBotton: \"20px\" }}\n              >\n                <CancelIcon />\n              </IconButton>\n            </DialogTitle>\n            <DialogContent required>\n              <TextField\n                required\n                autoFocus\n                classes={{\n                  root: classes.space\n                }}\n                value={name}\n                onChange={e =>\n                  this.setState({\n                    name: e.target.value\n                  })\n                }\n                error={name === \"\"}\n                helperText={name === \"\" ? \"Please enter Name\" : \" \"}\n                label=\"Name\"\n                type=\"string\"\n                fullWidth\n                InputProps={{\n                  classes: {\n                    underline: classes.underline\n                  }\n                }}\n              />\n              <TextField\n                required\n                autoFocus\n                multiline\n                classes={{\n                  root: classes.space\n                }}\n                value={type}\n                onChange={e =>\n                  this.setState({\n                    type: e.target.value\n                  })\n                }\n                error={type === \"\"}\n                helperText={\n                  type === \"\" ? \"Please enter Type of Department\" : \" \"\n                }\n                label=\"Type of Department\"\n                type=\"string\"\n                fullWidth\n                InputProps={{\n                  classes: {\n                    underline: classes.underline\n                  }\n                }}\n              />\n            </DialogContent>\n            <DialogActions\n              className={this.props.classes.styledFooter}\n              style={{\n                margin: \"0px\"\n              }}\n            >\n              <Button\n                onClick={this.handleCancel}\n                classes={{\n                  root: classes.spaceDialogAction\n                }}\n                variant=\"contained\"\n                size=\"large\"\n                style={{\n                  backgroundColor: \"#ee0053\"\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={this.handleFormSubmit}\n                classes={{\n                  root: classes.spaceDialogAction\n                }}\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"large\"\n                type=\"submit\"\n                disabled={name === \"\" || type === \"\"}\n              >\n                Save\n              </Button>\n            </DialogActions>\n          </Dialog>\n          <NewItemAddedConfirmSnackbar\n            openNewItemAddedConfirmSnackbar={\n              this.state.openNewItemAddedConfirmSnackbar\n            }\n            closeNewItemConfirmSnackbar={this.closeNewItemConfirmSnackbar}\n          />\n\n          <EmptyFieldSnackBar\n            openEmptyTextFieldSnackbar={this.state.openEmptyTextFieldSnackbar}\n            closeEmptyFieldSnackbar={this.closeEmptyFieldSnackbar}\n          />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nAddNewDepartment.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AddNewDepartment);\n\n// The Cancel button color - https://material-ui.com/customization/overrides/\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MySnackbarContent from \"../../UtilFunctions/MySnackbarContent\";\nimport { withStyles } from \"@material-ui/core\";\nimport { styles } from \"../../commonStyles/AddNewItemStyles\";\nimport PropTypes from \"prop-types\";\n\nclass EditItemConfirmSnackbar extends Component {\n  state = {\n    vertical: \"top\",\n    horizontal: \"center\"\n  };\n\n  render() {\n    const {\n      classes,\n      openEditItemConfirmSnackbar,\n      closeNewItemConfirmSnackbar\n    } = this.props;\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        open={openEditItemConfirmSnackbar}\n        autoHideDuration={2000}\n        onClose={closeNewItemConfirmSnackbar}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n      >\n        <MySnackbarContent\n          onClose={closeNewItemConfirmSnackbar}\n          variant=\"success\"\n          className={classes.margin}\n          message=\"Edited Department details has been saved successfully\"\n        />\n      </Snackbar>\n    );\n  }\n}\n\nEditItemConfirmSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EditItemConfirmSnackbar);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport history from \"../../history\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { styles } from \"../commonStyles/AddNewItemStyles\";\nimport theme from \"../commonStyles/AddNewItemThemes\";\nimport EmptyFieldSnackBar from \"./Snackbars/EmptyFieldSnackBar\";\nimport EditItemConfirmSnackbar from \"./Snackbars/EditItemConfirmSnackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n\nclass EditDepartment extends Component {\n  state = {\n    open: false,\n    openEditItemConfirmSnackbar: false,\n    openEmptyTextFieldSnackbar: false,\n    vertical: \"top\",\n    horizontal: \"center\",\n    name: this.props.departmentToEdit[0].name,\n    type: this.props.departmentToEdit[0].type,\n    arrowRef: null\n  };\n\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node\n    });\n  };\n\n  handleToggle = () => {\n    this.setState({\n      open: !this.state.open\n    });\n  };\n\n  handleFabOpen = () => {\n    this.setState({ open: true });\n  };\n\n  closeNewItemConfirmSnackbar = () => {\n    this.setState({ openEditItemConfirmSnackbar: false });\n    this.props.unSelectItems();\n  };\n\n  closeEmptyFieldSnackbar = () => {\n    this.setState({ openEmptyTextFieldSnackbar: false }, () => {});\n  };\n\n  handleEditFormSubmit = () => {\n    const { editItemToParentState } = this.props;\n    const { name, type } = this.state;\n    if (name !== \"\" && type !== \"\") {\n      axios\n        .put(`/api/department/${this.props.departmentToEdit[0]._id}`, {\n          name,\n          type\n        })\n        .then(() => {\n          editItemToParentState();\n          this.setState(\n            {\n              open: false,\n              openEditItemConfirmSnackbar: true,\n              vertical: \"top\",\n              horizontal: \"center\"\n            },\n            () => {\n              history.push(\"/department\");\n            }\n          );\n        })\n        .catch(error => {\n          alert(\n            \"Ooops something wrong happened while editing, please try again\"\n          );\n        });\n    } else {\n      this.setState({ openEmptyTextFieldSnackbar: true });\n    }\n  };\n\n  handleCancel = () => {\n    this.setState({ open: false });\n  };\n\n  handleEnterEscapeKeyPress = e => {\n    if (e.key === \"Enter\") {\n      this.handleEditFormSubmit();\n    } else if (e.key === \"Escape\") {\n      this.handleCancel();\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { name, type } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div>\n          <IconButton onClick={this.handleFabOpen} aria-label=\"Edit\">\n            <EditIcon />\n          </IconButton>\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleToggle}\n            aria-labelledby=\"form-dialog-title\"\n            fullWidth={true}\n            maxWidth={\"md\"}\n            variant=\"contained\"\n            PaperProps={{\n              classes: {\n                root: classes.paper\n              }\n            }}\n            onKeyDown={this.handleEnterEscapeKeyPress}\n          >\n            <DialogTitle\n              id=\"form-dialog-title\"\n              className={this.props.classes.styledHeader}\n              disableTypography\n            >\n              Edit Department\n              <IconButton\n                onClick={this.handleToggle}\n                style={{ float: \"right\", marginBotton: \"20px\" }}\n              >\n                <CancelIcon />\n              </IconButton>\n            </DialogTitle>\n            <DialogContent required>\n              <TextField\n                required\n                autoFocus\n                classes={{\n                  root: classes.space\n                }}\n                value={name}\n                onChange={e =>\n                  this.setState({\n                    name: e.target.value\n                  })\n                }\n                error={name === \"\"}\n                helperText={name === \"\" ? \"Please enter Name\" : \" \"}\n                label=\"Name\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                required\n                autoFocus\n                multiline\n                classes={{\n                  root: classes.space\n                }}\n                value={type}\n                onChange={e =>\n                  this.setState({\n                    type: e.target.value\n                  })\n                }\n                error={type === \"\"}\n                helperText={type === \"\" ? \"Please enter Type\" : \" \"}\n                label=\"Type\"\n                type=\"email\"\n                fullWidth\n              />\n            </DialogContent>\n            <DialogActions\n              className={this.props.classes.styledFooter}\n              style={{\n                margin: \"0px\"\n              }}\n            >\n              <Button\n                onClick={this.handleCancel}\n                variant=\"contained\"\n                size=\"large\"\n                classes={{\n                  root: classes.spaceDialogAction\n                }}\n                style={{ backgroundColor: \"#ee0053\" }}\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={this.handleEditFormSubmit}\n                classes={{\n                  root: classes.spaceDialogAction\n                }}\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"large\"\n                disabled={name === \"\" || type === \"\"}\n              >\n                Save\n              </Button>\n            </DialogActions>\n          </Dialog>\n          <EditItemConfirmSnackbar\n            openEditItemConfirmSnackbar={this.state.openEditItemConfirmSnackbar}\n            closeNewItemConfirmSnackbar={this.closeNewItemConfirmSnackbar}\n          />\n\n          <EmptyFieldSnackBar\n            openEmptyTextFieldSnackbar={this.state.openEmptyTextFieldSnackbar}\n            closeEmptyFieldSnackbar={this.closeEmptyFieldSnackbar}\n          />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nEditDepartment.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EditDepartment);\n\n/* The Cancel button's color was done initially implementing MUI override - https://material-ui.com/customization/overrides/\nBut later changed to regular inline style, as I was not able to differentiate the coloring the Cancel button with Save\n*/\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Select from \"react-select\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"material-ui/MenuItem\";\nimport styles from \"../commonStyles/SearchFilter-Styles.js\";\nimport toolbarStyles from \"../commonStyles/toolbarStyles\";\nimport combineStyles from \"../commonStyles/combineStyles\";\nimport SelectField from \"material-ui/SelectField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport \"../commonStyles/SearchFilter-InputField.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst NoOptionsMessage = props => {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n};\n\nconst inputComponent = ({ inputRef, ...props }) => {\n  return <div ref={inputRef} {...props} />;\n};\n\nconst Control = props => {\n  return (\n    <TextField\n      fullWidth\n      label=\"\"\n      InputLabelProps={{\n        classes: { root: props.selectProps.classes.labelRoot },\n        shrink: true\n      }}\n      InputProps={{\n        inputComponent,\n        disableUnderline: true,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps\n        }\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n};\n\nconst Option = props => {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n};\n\nconst Placeholder = props => {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n};\n\nconst SingleValue = props => {\n  return (\n    <Typography\n      className={props.selectProps.classes.singleValue}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n};\n\nconst ValueContainer = props => {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n};\n\nconst Menu = props => {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n};\n\nconst components = {\n  Control,\n  Menu,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer\n};\n\nclass SearchFilter extends React.Component {\n  state = {\n    query: \"\",\n    columnToQuery: \"name\",\n    arrowRef: null\n  };\n\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node\n    });\n  };\n\n  render() {\n    const { columnToQuery } = this.state;\n\n    // conditionally set the value of 'suggestions' with and IIFE\n    const suggestions = (() => {\n      switch (columnToQuery) {\n        case \"name\":\n          return this.props.allDepartments.map(item => ({\n            value: item.name,\n            label: item.name\n          }));\n        case \"type\":\n          return this.props.allDepartments.map(item => ({\n            value: item.type,\n            label: item.type\n          }));\n      }\n    })();\n\n    const {\n      classes,\n      theme,\n      value,\n      onChange,\n      inputValue,\n      onInputChange\n    } = this.props;\n\n    const selectStyles = {\n      input: base => ({\n        ...base,\n        width: \"20em\",\n        marginTop: \"20px\",\n        color: theme.palette.text.primary,\n        \"& input\": {\n          font: \"inherit\"\n        }\n      })\n    };\n\n    return (\n      <Grid\n        container\n        spacing={0}\n        alignItems=\"center\"\n        justify=\"center\"\n        alignContent=\"center\"\n        direction=\"row\"\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }}\n      >\n        <Grid\n          item\n          xs={24}\n          style={{\n            marginRight: \"700px\"\n          }}\n        >\n          <Paper className={classes.textSearchFilter}>\n            <Select\n              classes={classes}\n              styles={selectStyles}\n              options={suggestions}\n              components={components}\n              inputId=\"fb-gg-search\"\n              value={value}\n              onChange={onChange}\n              inputValue={inputValue}\n              onInputChange={onInputChange}\n              placeholder=\"Search\"\n              multi=\"true\"\n            />\n            <SelectField\n              style={{\n                marginLeft: \"1em\"\n              }}\n              floatingLabelText=\"Select a column\"\n              value={this.state.columnToQuery}\n              onChange={(event, index, value) =>\n                this.setState({ columnToQuery: value }, () => {\n                  this.props.handleColumnToQuery(this.state.columnToQuery);\n                })\n              }\n            >\n              <MenuItem value=\"name\" primaryText=\"Name\" />\n              <MenuItem value=\"type\" primaryText=\"Department Type\" />\n            </SelectField>\n\n            <Tooltip\n              title={\n                <React.Fragment>\n                  <h2>Clear the Search Filter</h2>\n                  <span className={classes.arrow} ref={this.handleArrowRef} />\n                </React.Fragment>\n              }\n              placement=\"top-end\"\n              classes={{\n                tooltip: classes.bootstrapTooltip,\n                popper: classes.bootstrapPopper,\n                tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                tooltipPlacementRight: classes.bootstrapPlacementRight,\n                tooltipPlacementTop: classes.bootstrapPlacementTop,\n                tooltipPlacementBottom: classes.bootstrapPlacementBottom\n              }}\n              PopperProps={{\n                popperOptions: {\n                  modifiers: {\n                    arrow: {\n                      enabled: Boolean(this.state.arrowRef),\n                      element: this.state.arrowRef\n                    }\n                  }\n                }\n              }}\n              onOpen={() =>\n                this.props.setTextFilterTooltip(\"Clear the Search Filter\")\n              }\n            >\n              <IconButton\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                className={classes.margin}\n                onClick={this.props.closeSearchFilterCompOnClick}\n                style={{ marginLeft: \"15px\" }}\n              >\n                <CancelIcon />\n              </IconButton>\n            </Tooltip>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nSearchFilter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nconst combinedStyles = combineStyles(styles, toolbarStyles);\n\nexport default withStyles(combinedStyles, { withTheme: true })(SearchFilter);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport toolbarStyles from \"../commonStyles/toolbarStyles\";\nimport { CSVLink } from \"react-csv\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport EditDepartment from \"./EditDepartment\";\nimport SearchFilterDepartment from \"./SearchFilterDepartment\";\n\nclass TableToolbarDepartment extends Component {\n  state = {\n    shouldSearchFilterCompOpen: false,\n    searchValue: \"\",\n    searchSelection: \"\",\n    textFilterCancelTooltip: \"\",\n    arrowRef: null\n  };\n\n  // function to handle the placement of the arrow on top of the Tooltip\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node\n    });\n  };\n\n  setTextFilterTooltip = tooltipfromchild => {\n    this.setState({\n      textFilterCancelTooltip: tooltipfromchild\n    });\n  };\n\n  clearTextFilterTooltip = () => {\n    this.setState({\n      textFilterCancelTooltip: \"\"\n    });\n  };\n\n  handleSearchInput = (e, { action }) => {\n    if (\n      action === \"menu-close\" ||\n      action === \"input-blur\" ||\n      action === \"set-value\"\n    ) {\n      return;\n    } else {\n      this.setState({ searchValue: e });\n    }\n  };\n\n  // In this TableToolbarDepartment component, I set the searchValue for the query, and with the handleQueryString() function I pass that value up to the parent component DepartmentList\n  handleSearchSelection = ({ value }) => {\n    this.setState(\n      {\n        searchSelection: value,\n        searchValue: value\n      },\n      () => {\n        if (this.state.searchValue) {\n          this.props.handleQueryString(this.state.searchValue);\n        }\n      }\n    );\n  };\n\n  openSearchFilterCompOnClick = () => {\n    if (this.state.shouldSearchFilterCompOpen === false) {\n      this.setState({\n        shouldSearchFilterCompOpen: true\n      });\n    }\n  };\n\n  closeSearchFilterCompOnClick = () => {\n    this.setState(\n      {\n        shouldSearchFilterCompOpen: false,\n        searchValue: \"\"\n      },\n      () => {\n        this.props.clearAllQueryString();\n        this.clearTextFilterTooltip();\n      }\n    );\n  };\n\n  render() {\n    const {\n      numSelected,\n      confirmDeleteCustom,\n      checkedItems,\n      departmentToEdit,\n      editItem,\n      unSelectItems,\n      classes\n    } = this.props;\n\n    const { searchValue, searchSelection } = this.state;\n\n    return (\n      <Toolbar\n        className={classNames(classes.root, {\n          [classes.highlight]: numSelected > 0\n        })}\n      >\n        <div className={classes.title}>\n          {numSelected === 1 ? (\n            <Typography color=\"inherit\" variant=\"subtitle1\">\n              {numSelected} item selected\n            </Typography>\n          ) : numSelected > 1 ? (\n            <Typography color=\"inherit\" variant=\"subtitle1\">\n              {numSelected} items selected\n            </Typography>\n          ) : (\n            <Typography variant=\"h6\" id=\"tableTitle\">\n              Departments\n            </Typography>\n          )}\n        </div>\n        <div className={classes.spacer} />\n        <div className={classes.actions}>\n          {numSelected > 0 ? (\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              {numSelected === 1 ? (\n                <Tooltip\n                  title={\n                    <React.Fragment>\n                      <h2>Download data for the selected item(s)</h2>\n                      <span\n                        className={classes.arrow}\n                        ref={this.handleArrowRef}\n                      />\n                    </React.Fragment>\n                  }\n                  placement=\"top-end\"\n                  classes={{\n                    tooltip: classes.bootstrapTooltip,\n                    popper: classes.bootstrapPopper,\n                    tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                    tooltipPlacementRight: classes.bootstrapPlacementRight,\n                    tooltipPlacementTop: classes.bootstrapPlacementTop,\n                    tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                  }}\n                  PopperProps={{\n                    popperOptions: {\n                      modifiers: {\n                        arrow: {\n                          enabled: Boolean(this.state.arrowRef),\n                          element: this.state.arrowRef\n                        }\n                      }\n                    }\n                  }}\n                >\n                  <CSVLink\n                    data={this.props.downloadSelectedItems}\n                    style={{ marginRight: \"48px\", paddingTop: \"25px\" }}\n                  >\n                    <FontAwesomeIcon icon=\"download\" size=\"1x\" color=\"black\" />\n                  </CSVLink>\n                </Tooltip>\n              ) : null}\n              {numSelected > 1 ? (\n                <Tooltip\n                  title={\n                    <React.Fragment>\n                      <h2>Download data for the selected item(s)</h2>\n                      <span\n                        className={classes.arrow}\n                        ref={this.handleArrowRef}\n                      />\n                    </React.Fragment>\n                  }\n                  placement=\"top-end\"\n                  classes={{\n                    tooltip: classes.bootstrapTooltip,\n                    popper: classes.bootstrapPopper,\n                    tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                    tooltipPlacementRight: classes.bootstrapPlacementRight,\n                    tooltipPlacementTop: classes.bootstrapPlacementTop,\n                    tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                  }}\n                  PopperProps={{\n                    popperOptions: {\n                      modifiers: {\n                        arrow: {\n                          enabled: Boolean(this.state.arrowRef),\n                          element: this.state.arrowRef\n                        }\n                      }\n                    }\n                  }}\n                >\n                  <CSVLink\n                    data={this.props.downloadSelectedItems}\n                    style={{ marginRight: \"48px\", paddingTop: \"13px\" }}\n                  >\n                    <FontAwesomeIcon icon=\"download\" size=\"1x\" color=\"black\" />\n                  </CSVLink>\n                </Tooltip>\n              ) : null}\n              <Tooltip\n                title={\n                  <React.Fragment>\n                    <h2>Delete</h2>\n                    <span className={classes.arrow} ref={this.handleArrowRef} />\n                  </React.Fragment>\n                }\n                placement=\"top-end\"\n                classes={{\n                  tooltip: classes.bootstrapTooltip,\n                  popper: classes.bootstrapPopper,\n                  tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                  tooltipPlacementRight: classes.bootstrapPlacementRight,\n                  tooltipPlacementTop: classes.bootstrapPlacementTop,\n                  tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                }}\n                PopperProps={{\n                  popperOptions: {\n                    modifiers: {\n                      arrow: {\n                        enabled: Boolean(this.state.arrowRef),\n                        element: this.state.arrowRef\n                      }\n                    }\n                  }\n                }}\n              >\n                <IconButton\n                  aria-label=\"Delete\"\n                  onClick={confirmDeleteCustom.bind(null, checkedItems)}\n                  variant=\"contained\"\n                  className={classes.button}\n                  style={{ marginRight: \"40px\" }}\n                >\n                  <DeleteIcon className={classes.rightIcon} />\n                </IconButton>\n              </Tooltip>\n              <Tooltip\n                title={\n                  <React.Fragment>\n                    <h2>Edit</h2>\n                    <span className={classes.arrow} ref={this.handleArrowRef} />\n                  </React.Fragment>\n                }\n                placement=\"top-end\"\n                classes={{\n                  tooltip: classes.bootstrapTooltip,\n                  popper: classes.bootstrapPopper,\n                  tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                  tooltipPlacementRight: classes.bootstrapPlacementRight,\n                  tooltipPlacementTop: classes.bootstrapPlacementTop,\n                  tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                }}\n                PopperProps={{\n                  popperOptions: {\n                    modifiers: {\n                      arrow: {\n                        enabled: Boolean(this.state.arrowRef),\n                        element: this.state.arrowRef\n                      }\n                    }\n                  }\n                }}\n              >\n                <IconButton\n                  aria-label=\"Edit\"\n                  variant=\"contained\"\n                  className={classes.button}\n                >\n                  {numSelected === 1 ? (\n                    <EditDepartment\n                      editItemToParentState={editItem}\n                      departmentToEdit={departmentToEdit}\n                      unSelectItems={unSelectItems}\n                    />\n                  ) : null}\n                </IconButton>\n              </Tooltip>\n            </div>\n          ) : (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                margin: \"auto\",\n                width: \"100%\"\n              }}\n            >\n              {!this.state.shouldSearchFilterCompOpen ? (\n                <Tooltip\n                  title={\n                    <React.Fragment>\n                      <h2>Download entire data</h2>\n                      <span\n                        className={classes.arrow}\n                        ref={this.handleArrowRef}\n                      />\n                    </React.Fragment>\n                  }\n                  placement=\"top-end\"\n                  classes={{\n                    tooltip: classes.bootstrapTooltip,\n                    popper: classes.bootstrapPopper,\n                    tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                    tooltipPlacementRight: classes.bootstrapPlacementRight,\n                    tooltipPlacementTop: classes.bootstrapPlacementTop,\n                    tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                  }}\n                  PopperProps={{\n                    popperOptions: {\n                      modifiers: {\n                        arrow: {\n                          enabled: Boolean(this.state.arrowRef),\n                          element: this.state.arrowRef\n                        }\n                      }\n                    }\n                  }}\n                >\n                  <CSVLink\n                    data={this.props.allDepartments}\n                    style={{ marginRight: \"48px\", paddingTop: \"13px\" }}\n                  >\n                    <FontAwesomeIcon\n                      icon=\"download\"\n                      size=\"1x\"\n                      color=\"#0099e5\"\n                    />\n                  </CSVLink>\n                </Tooltip>\n              ) : null}\n              <Tooltip\n                title={\n                  <React.Fragment>\n                    {this.state.textFilterCancelTooltip === \"\" ? (\n                      <h2>Filter List with Search Term</h2>\n                    ) : null}\n                    <span className={classes.arrow} ref={this.handleArrowRef} />\n                  </React.Fragment>\n                }\n                placement=\"top-end\"\n                classes={{\n                  tooltip: classes.bootstrapTooltip,\n                  popper: classes.bootstrapPopper,\n                  tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                  tooltipPlacementRight: classes.bootstrapPlacementRight,\n                  tooltipPlacementTop: classes.bootstrapPlacementTop,\n                  tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                }}\n                PopperProps={{\n                  popperOptions: {\n                    modifiers: {\n                      arrow: {\n                        enabled: Boolean(this.state.arrowRef),\n                        element: this.state.arrowRef\n                      }\n                    }\n                  }\n                }}\n              >\n                <IconButton\n                  aria-label=\"Filter list\"\n                  onClick={this.openSearchFilterCompOnClick}\n                >\n                  {this.state.shouldSearchFilterCompOpen ? (\n                    <SearchFilterDepartment\n                      closeSearchFilterCompOnClick={\n                        this.closeSearchFilterCompOnClick\n                      }\n                      allDepartments={this.props.allDepartments}\n                      handleColumnToQuery={this.props.handleColumnToQuery}\n                      value={searchSelection}\n                      onChange={e => this.handleSearchSelection(e)}\n                      inputValue={searchValue}\n                      onInputChange={(e, action) =>\n                        this.handleSearchInput(e, action)\n                      }\n                      style={{ marginRight: \"100px\" }}\n                      setTextFilterTooltip={this.setTextFilterTooltip}\n                      clearTextFilterTooltip={this.clearTextFilterTooltip}\n                    />\n                  ) : (\n                    <FontAwesomeIcon icon=\"filter\" color=\"#0099e5\" size=\"1x\" />\n                  )}\n                </IconButton>\n              </Tooltip>\n            </div>\n          )}\n        </div>\n      </Toolbar>\n    );\n  }\n}\n\nTableToolbarDepartment.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default withStyles(toolbarStyles)(TableToolbarDepartment);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { styles } from \"../commonStyles/ModuleItemListStyles\";\nimport toolbarStyles from \"../commonStyles/toolbarStyles\";\nimport combineStyles from \"../commonStyles/combineStyles\";\nimport { withStyles } from \"@material-ui/core\";\n\n// make sure the 'tableHeaderProp' below is the property name of the mongodb schema's property name of the relevant model\nconst rows = [\n  {\n    tableHeaderProp: \"name\",\n    disablePadding: true,\n    label: \"Department Name\"\n  },\n  {\n    tableHeaderProp: \"type\",\n    disablePadding: false,\n    label: \"Department Type\"\n  }\n];\n\nclass TableHeadDepartment extends React.Component {\n  state = {\n    arrowRef: null\n  };\n\n  // function to handle the placement of the arrow on top of the Tooltip\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node\n    });\n  };\n\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const {\n      onSelectAllClick,\n      order,\n      orderBy,\n      numSelected,\n      page,\n      rowsPerPage,\n      count,\n      noOfItemsInCurrentPage\n    } = this.props;\n\n    const { classes } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <Tooltip\n            title={\n              <React.Fragment>\n                <h2>\n                  {noOfItemsInCurrentPage > 1\n                    ? `Select all ${noOfItemsInCurrentPage}`\n                    : `Select the item `}\n                </h2>\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n              </React.Fragment>\n            }\n            enterDelay={300}\n            placement={\"top-end\"}\n            classes={{\n              tooltip: classes.bootstrapTooltip,\n              popper: classes.bootstrapPopper,\n              tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n              tooltipPlacementRight: classes.bootstrapPlacementRight,\n              tooltipPlacementTop: classes.bootstrapPlacementTop,\n              tooltipPlacementBottom: classes.bootstrapPlacementBottom\n            }}\n            PopperProps={{\n              popperOptions: {\n                modifiers: {\n                  arrow: {\n                    enabled: Boolean(this.state.arrowRef),\n                    element: this.state.arrowRef\n                  }\n                }\n              }\n            }}\n          >\n            <TableCell padding=\"checkbox\">\n              <Checkbox\n                indeterminate={\n                  page !== Math.max((0, Math.ceil(count / rowsPerPage) - 1))\n                    ? numSelected > 0 && numSelected < rowsPerPage\n                    : numSelected > 0 && numSelected < noOfItemsInCurrentPage\n                }\n                checked={\n                  noOfItemsInCurrentPage === 0\n                    ? false\n                    : page !== Math.max(0, Math.ceil(count / rowsPerPage) - 1)\n                    ? numSelected === rowsPerPage\n                    : noOfItemsInCurrentPage < rowsPerPage\n                    ? numSelected === noOfItemsInCurrentPage\n                    : numSelected === rowsPerPage\n                }\n                onChange={onSelectAllClick}\n              />\n            </TableCell>\n          </Tooltip>\n          {rows.map(\n            row => (\n              <TableCell\n                className={classes.row}\n                key={row.tableHeaderProp}\n                align=\"center\"\n                padding={row.disablePadding ? \"none\" : \"default\"}\n                sortDirection={orderBy === row.tableHeaderProp ? order : false}\n              >\n                <Tooltip\n                  title={\n                    <React.Fragment>\n                      <h2>Sort by {row.label}</h2>\n                      <span\n                        className={classes.arrow}\n                        ref={this.handleArrowRef}\n                      />\n                    </React.Fragment>\n                  }\n                  enterDelay={300}\n                  placement={\"top-end\"}\n                  classes={{\n                    tooltip: classes.bootstrapTooltip,\n                    popper: classes.bootstrapPopper,\n                    tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                    tooltipPlacementRight: classes.bootstrapPlacementRight,\n                    tooltipPlacementTop: classes.bootstrapPlacementTop,\n                    tooltipPlacementBottom: classes.bootstrapPlacementBottom\n                  }}\n                  PopperProps={{\n                    popperOptions: {\n                      modifiers: {\n                        arrow: {\n                          enabled: Boolean(this.state.arrowRef),\n                          element: this.state.arrowRef\n                        }\n                      }\n                    }\n                  }}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.tableHeaderProp}\n                    direction={order}\n                    onClick={this.createSortHandler(row.tableHeaderProp)}\n                  >\n                    {row.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            ),\n            this\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nTableHeadDepartment.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst combinedStyles = combineStyles(styles, toolbarStyles);\n\nexport default withStyles(combinedStyles)(TableHeadDepartment);\n\n/* The expresseion < Math.max(0, Math.ceil(count / rowsPerPage) - 1) > is the index value of the variable 'page' ONLY when I am on the last page. So the condition //#endregion\n< page === Math.max(0, Math.ceil(count / rowsPerPage) - 1) >  WILL ONLY BE TRUE on the last page.\n\n\nNote, - The variable 'page' is a built-in prop of TablePagination API (https://material-ui.com/api/table-pagination/) - and the value of 'page' is a zero-based index of the current page.\n */\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport \"../UtilFunctions/confirmDelete.css\";\nimport \"../UtilFunctions/snackbar.css\";\nimport { showDeleteSnackbar } from \"../UtilFunctions/showEmptyFieldAndDeleteSnackbar\";\nimport { withStyles } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport AddNewDepartment from \"./AddNewDepartment\";\nimport axios from \"axios\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { styles } from \"../commonStyles/ModuleItemListStyles\";\nimport toolbarStyles from \"../commonStyles/toolbarStyles\";\nimport combineStyles from \"../commonStyles/combineStyles\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TableToolbarDepartment from \"./TableToolbarDepartment\";\nimport TableHeadDepartment from \"./TableHeadDepartment\";\nimport orderByLodash from \"lodash/orderBy\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePaginationActionsWrapped from \"../UtilFunctions/TablePaginationActionsWrapped\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Helmet } from \"react-helmet\";\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    background: \"#66CCFF\",\n    color: theme.palette.common.white,\n    align: \"left\"\n  },\n  body: {\n    fontSize: 14,\n    align: \"left\"\n  }\n}))(TableCell);\n\nconst desc = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\n/* stableSort() higher order function to sort by a table heading\n1> the argument 'comparisonCB' is the getSorting() defined below.\n2> The sort() method takes a single compareFunction as a callback and compares each pair of successive elements.\n */\nfunction stableSort(array, comparisonCB) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparisonCB(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\n/* getSorting() to be passed as a callback to the above sableSort(). The argument 'orderBy' will initially start (as a state) its value with 'employee_name' (which is the first table header label) and then will take on whichever table header label the user clicks on.\nA> First the 'orderBy' value will be set by handleRequestSort() with its argument 'property'\nB> Then this function will be passed down as a prop 'onRequestSort' to EnhancedTableHead child component.\nC> In EnhancedTableHead, it will be called within createSortHandler() function and will be invoked on onClick and passed row.tableHeaderProp (which is the Table-header field value)\n */\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nclass DepartmentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allDepartments: [],\n      openEditModal: false,\n      editingOnItemDone: false,\n      order: \"desc\",\n      orderBy: \"name\",\n      selected: [],\n      page: 0,\n      rowsPerPage: 5,\n      queryStringFromChild: \"\",\n      columnToQuery: \"name\",\n      currentPageRenderedList: [],\n      arrowRef: null\n    };\n  }\n\n  // function to handle the placement of the arrow on top of the Tooltip\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node\n    });\n  };\n\n  openEditComponent = () => {\n    this.setState({\n      openEditModal: true\n    });\n  };\n\n  addItem = item => {\n    this.setState(\n      {\n        allDepartments: [item, ...this.state.allDepartments]\n      },\n      () => {\n        this.props.setDepartmentForSiblingCommunication(\n          this.state.allDepartments\n        );\n      }\n    );\n  };\n\n  editItem = () => {\n    // * having to put this extra if condition and the database call here to resolve an issue that for the last item left in the table, after edit submission the employee_name and work-description was not getting rendered immediately. Edited data will get rendered only after page refresh\n    if (this.state.allDepartments.length === 1) {\n      axios\n        .get(\"/api/department\")\n        .then(res => {\n          this.setState({\n            allDepartments: res.data\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } else {\n      this.setState(\n        {\n          allDepartments: [this.state.allDepartments]\n        },\n        () => {\n          this.props.setDepartmentForSiblingCommunication(\n            this.state.allDepartments\n          );\n        }\n      );\n    }\n  };\n\n  returnDocumentToEdit = id => {\n    if (this.state.selected.length !== 0) {\n      return this.state.allDepartments.filter(item => item._id === id);\n    }\n  };\n\n  confirmDeleteCustom = idArr => {\n    let payload = {\n      department_id_list_arr: idArr\n    };\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className=\"custom-ui\">\n            <h1>Are you sure?</h1>\n            <p>You want to delete this Department Item</p>\n            <button onClick={onClose}>No</button>\n            <button\n              onClick={() => {\n                axios\n                  .delete(\"/api/department/delete\", {\n                    data: payload\n                  })\n                  .then(() => {\n                    this.setState(\n                      {\n                        allDepartments: [this.state.allDepartments],\n                        selected: []\n                      },\n                      () => {\n                        this.props.setDepartmentForSiblingCommunication(\n                          this.state.allDepartments\n                        );\n                      }\n                    );\n                  })\n                  .then(() => {\n                    showDeleteSnackbar();\n                    onClose();\n                  })\n                  .catch(error => {\n                    if (error.response.status === 401) {\n                      this.props.history.push(\"/login\");\n                      alert(\"Please Login, session expired\");\n                      onClose();\n                    } else {\n                      alert(\n                        \"Oops something wrong happened while deleting, please try again\"\n                      );\n                    }\n                  });\n              }}\n            >\n              Yes, Delete it!\n            </button>\n          </div>\n        );\n      }\n    });\n  };\n\n  // Function to handle the the request from user to sort by a particular heading.\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = \"desc\";\n\n    if (this.state.orderBy === property && this.state.order === \"desc\") {\n      order = \"asc\";\n    }\n    // In below I am setting the state with destructuring, given both key-value is the same word. So in setState, I just mention the key from the state variable.\n    this.setState({ order, orderBy });\n  };\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  // Todo - include logic for text based query\n  handleSelectAllClick = event => {\n    const {\n      page,\n      rowsPerPage,\n      queryStringFromChild,\n      allDepartments,\n      order,\n      orderBy\n    } = this.state;\n\n    if (event.target.checked) {\n      if (queryStringFromChild === \"\") {\n        const listOfItemsInCurrentPage = stableSort(\n          allDepartments,\n          getSorting(order, orderBy)\n        ).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n        console.log(\"LIST OF CURRENT PAGE ITEMS \", listOfItemsInCurrentPage);\n        this.setState(state => ({\n          selected: listOfItemsInCurrentPage.map(n => n._id)\n        }));\n        return;\n      } else if (this.state.queryStringFromChild !== \"\") {\n        const lowerCaseQuery = this.state.queryStringFromChild.toLowerCase();\n\n        const totalTextQueryResult = this.state.allDepartments.filter(item => {\n          return (\n            item[this.state.columnToQuery] &&\n            item[this.state.columnToQuery]\n              .toLowerCase()\n              .includes(lowerCaseQuery)\n          );\n        });\n        const departmentListToRender = totalTextQueryResult.slice(\n          this.state.page * this.state.rowsPerPage,\n          this.state.page * this.state.rowsPerPage + this.state.rowsPerPage\n        );\n        this.setState(state => ({\n          selected: departmentListToRender.map(n => n._id)\n        }));\n        return;\n      }\n    }\n    this.setState({ selected: [] });\n  };\n\n  unSelectItems = () => {\n    this.setState({\n      selected: []\n    });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    this.setState({ selected: newSelected });\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"/api/department\")\n      .then(res => {\n        this.setState({\n          allDepartments: res.data\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.state.rowsPerPage !== prevState.rowsPerPage ||\n      this.state.page !== prevState.page ||\n      this.state.allDepartments.length !== prevState.allDepartments.length ||\n      this.state.selected !== prevState.selected\n    ) {\n      return axios\n        .get(\"/api/department\")\n        .then(res => {\n          this.setState({\n            allDepartments: res.data\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleQueryString = queryTypedInChild => {\n    this.setState({\n      queryStringFromChild: queryTypedInChild\n    });\n  };\n\n  handleColumnToQuery = columnToQueryInChild => {\n    this.setState({\n      columnToQuery: columnToQueryInChild\n    });\n  };\n\n  clearAllQueryString = () => {\n    this.setState({\n      queryStringFromChild: \"\",\n      columnToQuery: \"name\"\n    });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      order,\n      orderBy,\n      selected,\n      rowsPerPage,\n      page,\n      allDepartments,\n      queryStringFromChild\n    } = this.state;\n\n    // lowercase the queryStringFromChild string that the user types\n    const lowerCaseQuery =\n      queryStringFromChild && queryStringFromChild.toLowerCase();\n\n    const totalTextQueryResult = allDepartments.filter(\n      item =>\n        item[this.state.columnToQuery] &&\n        item[this.state.columnToQuery].toLowerCase().includes(lowerCaseQuery)\n    );\n\n    const departmentListToRender = orderByLodash(\n      queryStringFromChild\n        ? totalTextQueryResult\n        : stableSort(allDepartments, getSorting(order, orderBy)).slice(\n            page * rowsPerPage,\n            page * rowsPerPage + rowsPerPage\n          )\n    );\n\n    const departmentToEdit = this.returnDocumentToEdit(this.state.selected[0]);\n\n    // filter the whole database returning only the selected items\n    const downloadSelectedItems = allDepartments.filter(item => {\n      return selected.indexOf(item._id) !== -1;\n    });\n\n    const emptyRows =\n      rowsPerPage -\n      Math.min(rowsPerPage, departmentListToRender.length - page * rowsPerPage);\n\n    // in below the whole table header is a different component 'EnhancedTableHead'\n    return (\n      <MuiThemeProvider>\n        <div>\n          <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>MyCompany Department List</title>\n            <meta name=\"description\" content=\"MyCompany List of Departments!\" />\n          </Helmet>\n          <Row>\n            <Col xs=\"12\">\n              <Paper className={classes.root}>\n                <TableToolbarDepartment\n                  allDepartments={this.state.allDepartments}\n                  numSelected={selected.length}\n                  confirmDeleteCustom={this.confirmDeleteCustom}\n                  checkedItems={selected}\n                  deleteItem={this.deleteItem}\n                  departmentToEdit={departmentToEdit}\n                  editItem={this.editItem}\n                  handleQueryString={this.handleQueryString}\n                  handleColumnToQuery={this.handleColumnToQuery}\n                  clearAllQueryString={this.clearAllQueryString}\n                  unSelectItems={this.unSelectItems}\n                  downloadSelectedItems={downloadSelectedItems}\n                  page={this.state.page}\n                  rowsPerPage={this.state.rowsPerPage}\n                />\n                <div className={classes.tableWrapper}>\n                  <Table className={classes.table}>\n                    <TableHeadDepartment\n                      numSelected={selected.length}\n                      order={order}\n                      orderBy={orderBy}\n                      onSelectAllClick={this.handleSelectAllClick}\n                      onRequestSort={this.handleRequestSort}\n                      page={page}\n                      count={\n                        queryStringFromChild\n                          ? totalTextQueryResult.length\n                          : allDepartments.length\n                      }\n                      rowsPerPage={parseInt(rowsPerPage)}\n                      noOfItemsInCurrentPage={departmentListToRender.length}\n                    />\n                    <TableBody>\n                      {departmentListToRender.map((n, i) => {\n                        const isSelected = this.isSelected(n._id);\n                        return (\n                          <TableRow\n                            hover\n                            onClick={event => this.handleClick(event, n._id)}\n                            role=\"checkbox\"\n                            aria-checked={isSelected}\n                            tabIndex={-1}\n                            key={n._id || n.id || i}\n                            selected={isSelected}\n                            style={{\n                              height: \"15px\"\n                            }}\n                          >\n                            <CustomTableCell\n                              padding=\"checkbox\"\n                              style={{\n                                width: \"10px\"\n                              }}\n                            >\n                              <Checkbox checked={isSelected} />\n                            </CustomTableCell>\n                            <CustomTableCell\n                              align=\"center\"\n                              style={{\n                                whiteSpace: \"nowrap\",\n                                maxWidth: 0,\n                                overflow: \"hidden\",\n                                textOverflow: \"ellipsis\",\n                                width: \"18%\"\n                              }}\n                            >\n                              {n.name}\n                            </CustomTableCell>\n\n                            <CustomTableCell\n                              align=\"center\"\n                              style={{\n                                whiteSpace: \"nowrap\",\n                                maxWidth: 0,\n                                overflow: \"hidden\",\n                                textOverflow: \"ellipsis\",\n                                width: \"10%\"\n                              }}\n                            >\n                              {n.work_description}\n                            </CustomTableCell>\n                            <CustomTableCell\n                              align=\"left\"\n                              style={{\n                                whiteSpace: \"nowrap\",\n                                maxWidth: 0,\n                                overflow: \"hidden\",\n                                textOverflow: \"ellipsis\"\n                              }}\n                            >\n                              {n.type}\n                            </CustomTableCell>\n                          </TableRow>\n                        );\n                      })}\n                      {emptyRows > 0 && (\n                        <TableRow style={{ height: 0 * emptyRows }}>\n                          <CustomTableCell colSpan={6} />\n                        </TableRow>\n                      )}\n                    </TableBody>\n                    <TableFooter>\n                      <TableRow>\n                        <TablePagination\n                          rowsPerPageOptions={[5, 10, 25]}\n                          colSpan={6}\n                          count={\n                            queryStringFromChild\n                              ? totalTextQueryResult.length\n                              : allDepartments.length\n                          }\n                          rowsPerPage={parseInt(rowsPerPage)}\n                          page={page}\n                          SelectProps={{\n                            native: true\n                          }}\n                          onChangePage={this.handleChangePage}\n                          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                          ActionsComponent={TablePaginationActionsWrapped}\n                        />\n                      </TableRow>\n                    </TableFooter>\n                  </Table>\n                </div>\n                <div id=\"snackbar\">\n                  The Department you selected has been successfully deleted\n                </div>\n              </Paper>\n            </Col>\n          </Row>\n          <Row>\n            <br />\n          </Row>\n\n          <div className=\"float-sm-right m-b-sm\">\n            <Tooltip\n              title={\n                <React.Fragment>\n                  <h2>Add a new Department</h2>\n                  <span className={classes.arrow} ref={this.handleArrowRef} />\n                </React.Fragment>\n              }\n              placement=\"top-end\"\n              classes={{\n                tooltip: classes.bootstrapTooltip,\n                popper: classes.bootstrapPopper,\n                tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                tooltipPlacementRight: classes.bootstrapPlacementRight,\n                tooltipPlacementTop: classes.bootstrapPlacementTop,\n                tooltipPlacementBottom: classes.bootstrapPlacementBottom\n              }}\n              PopperProps={{\n                popperOptions: {\n                  modifiers: {\n                    arrow: {\n                      enabled: Boolean(this.state.arrowRef),\n                      element: this.state.arrowRef\n                    }\n                  }\n                }\n              }}\n            >\n              <IconButton\n                aria-label=\"Filter list\"\n                variant=\"contained\"\n                className={classes.fabButton}\n              >\n                <AddNewDepartment addNewItemToParentState={this.addItem} />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nDepartmentList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n// Use the utility function combineStyles() to create a compatible function for `withStyles`:\nconst combinedStyles = combineStyles(styles, toolbarStyles);\n\nexport default withStyles(combinedStyles)(DepartmentList);\n\n// export default withStyles(styles)(DepartmentList);\n\n/*\n1> FAB - https://material-ui.com/demos/buttons/#floating-action-buttons\n\n2> For rendering the newly added item, I am updating the parent's state by passing date from Child to parent.\nA> Define a callback in my parent (addItem function) which takes the data I need in as a parameter.\n\nB> Pass that callback as a prop to the child\n<AddNewDepartment addNewItemToParentState={this.addItem} />\n\nC> Call the callback using this.props.[callback] in the child, and pass in the data as the argument.\n\n3> I needed the componentDidUpdate, as without it this component will not update the state properly. So without componentDidUpdate() after I add a new item, that will render at the top of the list first and also, clicking immediately on the Delete button on that newly added item will FAIL.\n\n*/\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./NotFound.css\";\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div className=\"bg-purple\">\n        <div className=\"stars\">\n          <div className=\"custom-navbar\">\n            <div className=\"brand-logo\">\n              <img\n                src={require(\"../assets/images/logo.png\")}\n                style={{ width: \"80px\" }}\n              />\n            </div>\n            <div className=\"navbar-links\">\n              <ul>\n                <li>\n                  <Link className=\"btn-go-home\" to=\"/employee\">\n                    Home\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"central-body\">\n            <img\n              className=\"image-404\"\n              src={require(\"../assets/images/404.svg\")}\n              width=\"300px\"\n            />\n            <Link className=\"btn-go-home\" to=\"/employee\">\n              Return to Home Page\n            </Link>\n          </div>\n          <div className=\"objects\">\n            <img\n              className=\"object_rocket\"\n              src={require(\"../assets/images/rocket.svg\")}\n              width=\"40px\"\n            />\n            <div className=\"earth-moon\">\n              <img\n                className=\"object_earth\"\n                src={require(\"../assets/images/earth.svg\")}\n                width=\"100px\"\n              />\n              <img\n                className=\"object_moon\"\n                src={require(\"../assets/images/moon.svg\")}\n                width=\"80px\"\n              />\n            </div>\n            <div className=\"box_astronaut\">\n              <img\n                className=\"object_astronaut\"\n                src={require(\"../assets/images/astronaut.svg\")}\n                width=\"140px\"\n              />\n            </div>\n          </div>\n          <div className=\"glowing_stars\">\n            <div className=\"star\" />\n            <div className=\"star\" />\n            <div className=\"star\" />\n            <div className=\"star\" />\n            <div className=\"star\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport red from '@material-ui/core/colors/red';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  icon: {\n    margin: theme.spacing.unit * 1\n    \n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing.unit * 7 + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing.unit * 9 + 1\n    }\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3\n  }\n});\n\nconst ListItemLink = props => {\n  return <ListItem button component=\"a\" {...props} />;\n};\n\nconst EmployeeIcon = props => {\n  return (\n    <SvgIcon {...props}>\n    <path d=\"M9 8c1.66 0 2.99-1.34 2.99-3S10.66 2 9 2C7.34 2 6 3.34 6 5s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V16h14v-2.5c0-2.33-4.67-3.5-7-3.5z\"/>\n    </SvgIcon>\n  );\n}\n\nconst DepartmentIcon = props => {\n  return (\n    <SvgIcon {...props}>\n    <path d=\"M16.5 13c-1.2 0-3.07.34-4.5 1-1.43-.67-3.3-1-4.5-1C5.33 13 1 14.08 1 16.25V19h22v-2.75c0-2.17-4.33-3.25-6.5-3.25zm-4 4.5h-10v-1.25c0-.54 2.56-1.75 5-1.75s5 1.21 5 1.75v1.25zm9 0H14v-1.25c0-.46-.2-.86-.52-1.22.88-.3 1.96-.53 3.02-.53 2.44 0 5 1.21 5 1.75v1.25zM7.5 12c1.93 0 3.5-1.57 3.5-3.5S9.43 5 7.5 5 4 6.57 4 8.5 5.57 12 7.5 12zm0-5.5c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm9 5.5c1.93 0 3.5-1.57 3.5-3.5S18.43 5 16.5 5 13 6.57 13 8.5s1.57 3.5 3.5 3.5zm0-5.5c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2z\"/>\n    </SvgIcon>\n  );\n}\n\nclass ComponentHeader extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n    this.props.onSideDrawerOpen();\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n    this.props.onSideDrawerClose();\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: this.state.open\n          })}\n        >\n          <Toolbar disableGutters={!this.state.open}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, {\n                [classes.hide]: this.state.open\n              })}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Corporate Records\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          className={classNames(classes.drawer, {\n            [classes.drawerOpen]: this.state.open,\n            [classes.drawerClose]: !this.state.open\n          })}\n          classes={{\n            paper: classNames({\n              [classes.drawerOpen]: this.state.open,\n              [classes.drawerClose]: !this.state.open\n            })\n          }}\n          open={this.state.open}\n        >\n          <div className={classes.toolbar}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === \"rtl\" ? (\n                <ChevronRightIcon />\n              ) : (\n                <ChevronLeftIcon />\n              )}\n            </IconButton>\n          </div>\n          <List>\n            <ListItemLink href=\"/employee\">\n              <EmployeeIcon className={classes.icon} color=\"secondary\" style={{ fontSize: 30, marginBottom: \"0px\", paddingBottom: \"0px\" }} />\n              <ListItemText\n                primary={\"Employee List\"}                \n              />\n            </ListItemLink>\n          </List>\n          <List>\n            <ListItemLink href=\"/department\">\n            <DepartmentIcon className={classes.icon} color=\"secondary\" style={{ fontSize: 30, marginTop: \"0px\", paddingTop: \"0px\" }} />\n              <ListItemText\n                primary={\"Department List\"}                \n              />\n            </ListItemLink>\n          </List>\n          <Divider />\n          <List>\n            {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nComponentHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ComponentHeader);\n","import React, { Component } from \"react\";\nimport Welcome from \"react-welcome-page\";\n\n// A functional component only for the landing page\n// The height & width has no effect though (I included for testing)\nconst LandingPage = () => ({\n  render() {\n    return (\n      <div>\n        <Welcome\n          loopDuration={2100}\n          data={[\n            {\n              backgroundColor: \"rgb(73, 49, 91)\",\n              width: \"400px\",\n              height: \"400px\",\n              textColor: \"#EE79EA\",\n              imageAnimation: \"flipInX\",\n              image: require(\"../assets/images/LandingPage/code-4.jpeg\")\n            },\n            {\n              backgroundColor: \"rgb(252, 187, 19)\",\n              width: \"400px\",\n              height: \"400px\",\n              textColor: \"#754600\",\n              text: \"My App\",\n              imageAnimation: \"slideInUp\",\n              textAnimation: \"slideInLeft\",\n              image: require(\"../assets/images/LandingPage/code-1.jpeg\")\n            },\n            {\n              backgroundColor: \"rgb(156, 196, 76)\",\n              width: \"400px\",\n              height: \"400px\",\n              textColor: \"#344115\",\n              text: \"Keep Coding\",\n              image: require(\"../assets/images/LandingPage/code-2.jpeg\")\n            },\n            {\n              backgroundColor: \"rgb(4, 116, 188)\",\n              width: \"400px\",\n              height: \"400px\",\n              textColor: \"#FFFFFF\",\n              text: \"Code all the way\",\n              textAnimation: \"fadeInUp\",\n              image: require(\"../assets/images/LandingPage/code-3.jpeg\")\n            }\n          ]}\n        />\n      </div>\n    );\n  }\n});\n\nexport default LandingPage;\n","import React, { Component } from \"react\";\nimport { Route, BrowserRouter, Switch, Router, Link } from \"react-router-dom\";\n// import Routes from \"./Routes\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\nimport history from \"./history\";\nimport axios from \"axios\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFilter,\n  faDownload,\n  faCalendarAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport EmployeeList from \"./Components/Employee/EmployeeList\";\nimport DepartmentList from \"./Components/Department/DepartmentList\";\nimport NotFound from \"./Components/NotFound\";\nimport ComponentHeader from \"./Components/ComponentHeader\";\nimport LandingPage from \"./Components/LandingPage\";\n\nlibrary.add(faFilter, faDownload, faCalendarAlt);\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  }\n});\n\nclass App extends Component {\n  state = {\n    allDepartmentsForSiblingCommunication: [],\n    isSideDrawerOpen: false\n  };\n\n  onSideDrawerOpen = () => {\n    this.setState({\n      isSideDrawerOpen: true\n    });\n  };\n\n  onSideDrawerClose = () => {\n    this.setState({\n      isSideDrawerOpen: false\n    });\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"/api/department\")\n      .then(res => {\n        this.setState({\n          allDepartmentsForSiblingCommunication: res.data\n        });\n      })\n      .catch(error => {});\n  }\n\n  setDepartmentForSiblingCommunication = department => {\n    this.setState({\n      allDepartmentsForSiblingCommunication: department\n    });\n  };\n\n  render() {\n    const { allDepartmentsForSiblingCommunication } = this.state;\n\n    const pad = 16;\n    const appBarHeight = 74;\n    const drawerWidth = 240;\n\n    const left = this.state.isSideDrawerOpen ? drawerWidth : 85;\n    const top = appBarHeight;\n\n    const width = this.state.isSideDrawerOpen\n      ? \"calc(100% - \" + (drawerWidth + 2 * pad) + \"px)\"\n      : \"calc(100% - \" + 2 * (pad + 50) + \"px)\";\n\n    const contentStyle = {\n      width: width,\n      marginTop: top + pad,\n      marginLeft: left + pad,\n      marginBottom: pad,\n      marginRight: pad,\n\n      padding: 0\n    };\n\n    return (\n      <div>\n        <BrowserRouter basename=\"/employee\">\n          <Router history={history}>\n            <div>\n              <ComponentHeader\n                onSideDrawerOpen={this.onSideDrawerOpen}\n                onSideDrawerClose={this.onSideDrawerClose}\n              />\n              <div style={contentStyle}>\n                <Switch>\n                  <Route exact path=\"/\" render={props => <LandingPage />} />\n                  <Route\n                    exact\n                    path=\"/employee\"\n                    render={props => (\n                      <EmployeeList\n                        {...props}\n                        allDepartmentsForSiblingCommunication={\n                          allDepartmentsForSiblingCommunication\n                        }\n                      />\n                    )}\n                  />\n                  <Route\n                    exact\n                    path=\"/department\"\n                    render={props => (\n                      <DepartmentList\n                        {...props}\n                        setDepartmentForSiblingCommunication={\n                          this.setDepartmentForSiblingCommunication\n                        }\n                      />\n                    )}\n                  />\n                  <Route component={NotFound} />\n                </Switch>\n              </div>\n            </div>\n          </Router>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}